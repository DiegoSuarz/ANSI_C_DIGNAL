

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 08 13:16:25 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataBANK0
    71  00165C                     __pidataBANK0:
    72                           	callstack 0
    73                           
    74                           ;initializer for main@F3527
    75  00165C  0037               	dw	55
    76  00165E  66                 	db	102
    77  00165F  69                 	db	105
    78  001660  72                 	db	114
    79  001661  75                 	db	117
    80  001662  6C                 	db	108
    81  001663  61                 	db	97
    82  001664  69                 	db	105
    83  001665  73                 	db	115
    84  001666  00                 	db	0
    85  001667  00                 	db	0
    86  001668  0005               	dw	5
    87                           
    88                           ;initializer for stoa@F1150
    89  00166A  28                 	db	40
    90  00166B  6E                 	db	110
    91  00166C  75                 	db	117
    92  00166D  6C                 	db	108
    93  00166E  6C                 	db	108
    94  00166F  29                 	db	41
    95  001670  00                 	db	0
    96                           
    97                           	psect	smallconst
    98  000800                     __psmallconst:
    99                           	callstack 0
   100  000800  00                 	db	0
   101  000801                     STR_2:
   102  000801  45                 	db	69	;'E'
   103  000802  6C                 	db	108	;'l'
   104  000803  20                 	db	32
   105  000804  6E                 	db	110	;'n'
   106  000805  6F                 	db	111	;'o'
   107  000806  6D                 	db	109	;'m'
   108  000807  62                 	db	98	;'b'
   109  000808  72                 	db	114	;'r'
   110  000809  65                 	db	101	;'e'
   111  00080A  20                 	db	32
   112  00080B  64                 	db	100	;'d'
   113  00080C  65                 	db	101	;'e'
   114  00080D  6C                 	db	108	;'l'
   115  00080E  20                 	db	32
   116  00080F  70                 	db	112	;'p'
   117  000810  65                 	db	101	;'e'
   118  000811  72                 	db	114	;'r'
   119  000812  72                 	db	114	;'r'
   120  000813  6F                 	db	111	;'o'
   121  000814  20                 	db	32
   122  000815  65                 	db	101	;'e'
   123  000816  73                 	db	115	;'s'
   124  000817  3A                 	db	58	;':'
   125  000818  20                 	db	32
   126  000819  25                 	db	37
   127  00081A  73                 	db	115	;'s'
   128  00081B  0A                 	db	10
   129  00081C  00                 	db	0
   130  00081D                     STR_3:
   131  00081D  4C                 	db	76	;'L'
   132  00081E  61                 	db	97	;'a'
   133  00081F  20                 	db	32
   134  000820  65                 	db	101	;'e'
   135  000821  64                 	db	100	;'d'
   136  000822  61                 	db	97	;'a'
   137  000823  64                 	db	100	;'d'
   138  000824  20                 	db	32
   139  000825  64                 	db	100	;'d'
   140  000826  65                 	db	101	;'e'
   141  000827  6C                 	db	108	;'l'
   142  000828  20                 	db	32
   143  000829  70                 	db	112	;'p'
   144  00082A  65                 	db	101	;'e'
   145  00082B  72                 	db	114	;'r'
   146  00082C  72                 	db	114	;'r'
   147  00082D  6F                 	db	111	;'o'
   148  00082E  20                 	db	32
   149  00082F  65                 	db	101	;'e'
   150  000830  73                 	db	115	;'s'
   151  000831  3A                 	db	58	;':'
   152  000832  20                 	db	32
   153  000833  25                 	db	37
   154  000834  64                 	db	100	;'d'
   155  000835  0A                 	db	10
   156  000836  00                 	db	0
   157  000837                     STR_1:
   158  000837  45                 	db	69	;'E'
   159  000838  6C                 	db	108	;'l'
   160  000839  20                 	db	32
   161  00083A  69                 	db	105	;'i'
   162  00083B  64                 	db	100	;'d'
   163  00083C  20                 	db	32
   164  00083D  64                 	db	100	;'d'
   165  00083E  65                 	db	101	;'e'
   166  00083F  6C                 	db	108	;'l'
   167  000840  20                 	db	32
   168  000841  70                 	db	112	;'p'
   169  000842  65                 	db	101	;'e'
   170  000843  72                 	db	114	;'r'
   171  000844  72                 	db	114	;'r'
   172  000845  6F                 	db	111	;'o'
   173  000846  20                 	db	32
   174  000847  65                 	db	101	;'e'
   175  000848  73                 	db	115	;'s'
   176  000849  3A                 	db	58	;':'
   177  00084A  20                 	db	32
   178  00084B  25                 	db	37
   179  00084C  64                 	db	100	;'d'
   180  00084D  0A                 	db	10
   181  00084E  00                 	db	0
   182  00084F                     STR_4:
   183  00084F  6C                 	db	108	;'l'
   184  000850  6C                 	db	108	;'l'
   185  000851  73                 	db	115	;'s'
   186  000852  00                 	db	0
   187  000853  00                 	db	0	; dummy byte at the end
   188  0000                     
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192  0015C4                     __pcinit:
   193                           	callstack 0
   194  0015C4                     start_initialization:
   195                           	callstack 0
   196  0015C4                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Initialize objects allocated to BANK0 (21 bytes)
   200                           ; load TBLPTR registers with __pidataBANK0
   201  0015C4  0E5C               	movlw	low __pidataBANK0
   202  0015C6  6EF6               	movwf	tblptrl,c
   203  0015C8  0E16               	movlw	high __pidataBANK0
   204  0015CA  6EF7               	movwf	tblptrh,c
   205  0015CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   206  0015CE  6EF8               	movwf	tblptru,c
   207  0015D0  EE00  F088         	lfsr	0,__pdataBANK0
   208  0015D4  EE10 F015          	lfsr	1,21
   209  0015D8                     copy_data0:
   210  0015D8  0009               	tblrd		*+
   211  0015DA  CFF5 FFEE          	movff	tablat,postinc0
   212  0015DE  50E5               	movf	postdec1,w,c
   213  0015E0  50E1               	movf	fsr1l,w,c
   214  0015E2  E1FA               	bnz	copy_data0
   215                           
   216                           ; Clear objects allocated to BANK0 (40 bytes)
   217  0015E4  EE00  F060         	lfsr	0,__pbssBANK0
   218  0015E8  0E28               	movlw	40
   219  0015EA                     clear_0:
   220  0015EA  6AEE               	clrf	postinc0,c
   221  0015EC  06E8               	decf	wreg,f,c
   222  0015EE  E1FD               	bnz	clear_0
   223  0015F0                     end_of_initialization:
   224                           	callstack 0
   225  0015F0                     __end_of__initialization:
   226                           	callstack 0
   227  0015F0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   228  0015F2  6EF8               	movwf	tblptru,c
   229  0015F4  0E08               	movlw	high __Lsmallconst
   230  0015F6  6EF7               	movwf	tblptrh,c
   231  0015F8  0100               	movlb	0
   232  0015FA  EF71  F00A         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	bssBANK0
   235  000060                     __pbssBANK0:
   236                           	callstack 0
   237  000060                     _nout:
   238                           	callstack 0
   239  000060                     	ds	2
   240  000062                     _width:
   241                           	callstack 0
   242  000062                     	ds	2
   243  000064                     _prec:
   244                           	callstack 0
   245  000064                     	ds	2
   246  000066                     _flags:
   247                           	callstack 0
   248  000066                     	ds	2
   249  000068                     _dbuf:
   250                           	callstack 0
   251  000068                     	ds	32
   252                           
   253                           	psect	dataBANK0
   254  000088                     __pdataBANK0:
   255                           	callstack 0
   256  000088                     main@F3527:
   257                           	callstack 0
   258  000088                     	ds	14
   259  000096                     stoa@F1150:
   260                           	callstack 0
   261  000096                     	ds	7
   262                           
   263                           	psect	cstackBANK0
   264  00009D                     __pcstackBANK0:
   265                           	callstack 0
   266  00009D                     printf@ap:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x0
   270  00009D                     	ds	2
   271  00009F                     main@perro:
   272                           	callstack 0
   273                           
   274                           ; 14 bytes @ 0x2
   275  00009F                     	ds	14
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280  000001                     ?_strlen:
   281                           	callstack 0
   282  000001                     ?_strncmp:
   283                           	callstack 0
   284  000001                     ?___aodiv:
   285                           	callstack 0
   286  000001                     ?___aomod:
   287                           	callstack 0
   288  000001                     fputc@c:
   289                           	callstack 0
   290  000001                     strlen@s:
   291                           	callstack 0
   292  000001                     strncmp@_l:
   293                           	callstack 0
   294  000001                     ___aodiv@dividend:
   295                           	callstack 0
   296  000001                     ___aomod@dividend:
   297                           	callstack 0
   298                           
   299                           ; 8 bytes @ 0x0
   300  000001                     	ds	2
   301  000003                     fputc@fp:
   302                           	callstack 0
   303  000003                     strlen@a:
   304                           	callstack 0
   305  000003                     strncmp@_r:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309  000003                     	ds	2
   310  000005                     ??_fputc:
   311  000005                     strncmp@n:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x4
   315  000005                     	ds	2
   316  000007                     ??_strncmp:
   317                           
   318                           ; 1 bytes @ 0x6
   319  000007                     	ds	1
   320  000008                     strncmp@l:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x7
   324  000008                     	ds	1
   325  000009                     ___aodiv@divisor:
   326                           	callstack 0
   327  000009                     ___aomod@divisor:
   328                           	callstack 0
   329                           
   330                           ; 8 bytes @ 0x8
   331  000009                     	ds	1
   332  00000A                     ?_stoa:
   333                           	callstack 0
   334  00000A                     stoa@fp:
   335                           	callstack 0
   336  00000A                     fputs@s:
   337                           	callstack 0
   338  00000A                     strncmp@r:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x9
   342  00000A                     	ds	2
   343  00000C                     stoa@s:
   344                           	callstack 0
   345  00000C                     fputs@fp:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xB
   349  00000C                     	ds	2
   350  00000E                     ??_stoa:
   351  00000E                     fputs@c:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xD
   355  00000E                     	ds	1
   356  00000F                     fputs@i:
   357                           	callstack 0
   358  00000F                     stoa@nuls:
   359                           	callstack 0
   360                           
   361                           ; 7 bytes @ 0xE
   362  00000F                     	ds	2
   363  000011                     ?_pad:
   364                           	callstack 0
   365  000011                     ___aodiv@counter:
   366                           	callstack 0
   367  000011                     ___aomod@counter:
   368                           	callstack 0
   369  000011                     pad@fp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x10
   373  000011                     	ds	1
   374  000012                     ___aodiv@sign:
   375                           	callstack 0
   376  000012                     ___aomod@sign:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x11
   380  000012                     	ds	1
   381  000013                     ?_abs:
   382                           	callstack 0
   383  000013                     pad@buf:
   384                           	callstack 0
   385  000013                     abs@a:
   386                           	callstack 0
   387  000013                     ___aodiv@quotient:
   388                           	callstack 0
   389                           
   390                           ; 8 bytes @ 0x12
   391  000013                     	ds	2
   392  000015                     ??_abs:
   393  000015                     pad@p:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x14
   397  000015                     	ds	1
   398  000016                     stoa@i:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x15
   402  000016                     	ds	1
   403  000017                     ??_pad:
   404                           
   405                           ; 1 bytes @ 0x16
   406  000017                     	ds	1
   407  000018                     pad@i:
   408                           	callstack 0
   409  000018                     stoa@w:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x17
   413  000018                     	ds	2
   414  00001A                     pad@w:
   415                           	callstack 0
   416  00001A                     stoa@cp:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x19
   420  00001A                     	ds	2
   421  00001C                     ?_dtoa:
   422                           	callstack 0
   423  00001C                     dtoa@fp:
   424                           	callstack 0
   425  00001C                     stoa@p:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x1B
   429  00001C                     	ds	2
   430  00001E                     stoa@l:
   431                           	callstack 0
   432  00001E                     dtoa@d:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0x1D
   436  00001E                     	ds	8
   437  000026                     ??_dtoa:
   438                           
   439                           ; 1 bytes @ 0x25
   440  000026                     	ds	8
   441  00002E                     _dtoa$578:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2D
   445  00002E                     	ds	2
   446  000030                     dtoa@p:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2F
   450  000030                     	ds	2
   451  000032                     dtoa@w:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x31
   455  000032                     	ds	2
   456  000034                     dtoa@s:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x33
   460  000034                     	ds	2
   461  000036                     dtoa@n:
   462                           	callstack 0
   463                           
   464                           ; 8 bytes @ 0x35
   465  000036                     	ds	8
   466  00003E                     dtoa@i:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x3D
   470  00003E                     	ds	2
   471  000040                     ?_vfpfcnvrt:
   472                           	callstack 0
   473  000040                     vfpfcnvrt@fp:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x3F
   477  000040                     	ds	2
   478  000042                     vfpfcnvrt@fmt:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x41
   482  000042                     	ds	2
   483  000044                     vfpfcnvrt@ap:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x43
   487  000044                     	ds	2
   488  000046                     ??_vfpfcnvrt:
   489                           
   490                           ; 1 bytes @ 0x45
   491  000046                     	ds	2
   492  000048                     vfpfcnvrt@ll:
   493                           	callstack 0
   494                           
   495                           ; 8 bytes @ 0x47
   496  000048                     	ds	8
   497  000050                     vfpfcnvrt@cp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x4F
   501  000050                     	ds	2
   502  000052                     _vfpfcnvrt$607:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x51
   506  000052                     	ds	2
   507  000054                     ?_vfprintf:
   508                           	callstack 0
   509  000054                     vfprintf@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x53
   513  000054                     	ds	2
   514  000056                     vfprintf@fmt:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x55
   518  000056                     	ds	2
   519  000058                     vfprintf@ap:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x57
   523  000058                     	ds	2
   524  00005A                     vfprintf@cfmt:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x59
   528  00005A                     	ds	2
   529  00005C                     ?_printf:
   530                           	callstack 0
   531  00005C                     printf@fmt:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x5B
   535  00005C                     	ds	4
   536  000060                     
   537                           ; 1 bytes @ 0x5F
   538 ;;
   539 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   540 ;;
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 14 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  perro          14    2[BANK0 ] struct .
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2   10[None  ] int 
   550 ;; Registers used:
   551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         0      14       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         0      14       0       0       0       0       0       0       0
   561 ;;Total ram usage:       14 bytes
   562 ;; Hardware stack levels required when called: 8
   563 ;; This function calls:
   564 ;;		_comer
   565 ;;		_ladrar
   566 ;;		_printf
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text0
   573  0014E2                     __ptext0:
   574                           	callstack 0
   575  0014E2                     _main:
   576                           	callstack 23
   577  0014E2                     
   578                           ;main.c: 16:     perro_t perro = {55, "firulais",5};
   579  0014E2  EE20  F088         	lfsr	2,main@F3527
   580  0014E6  EE10  F09F         	lfsr	1,main@perro
   581  0014EA  0E0D               	movlw	13
   582  0014EC                     u1241:
   583  0014EC  CFDB FFE3          	movff	plusw2,plusw1
   584  0014F0  06E8               	decf	wreg,f,c
   585  0014F2  E2FC               	bc	u1241
   586  0014F4                     
   587                           ;main.c: 19:     ladrar();
   588  0014F4  EC3A  F00B         	call	_ladrar	;wreg free
   589  0014F8                     
   590                           ;main.c: 20:     comer();
   591  0014F8  EC3B  F00B         	call	_comer	;wreg free
   592  0014FC                     
   593                           ;main.c: 25:     printf("El id del perro es: %d\n",perro.id);
   594  0014FC  0E37               	movlw	low STR_1
   595  0014FE  6E5C               	movwf	printf@fmt^0,c
   596  001500  0E08               	movlw	high STR_1
   597  001502  6E5D               	movwf	(printf@fmt+1)^0,c
   598  001504  C09F  F05E         	movff	main@perro,?_printf+2
   599  001508  C0A0  F05F         	movff	main@perro+1,?_printf+3
   600  00150C  EC1A  F00B         	call	_printf	;wreg free
   601  001510                     
   602                           ;main.c: 26:     printf("El nombre del perro es: %s\n",perro.nombre);
   603  001510  0E01               	movlw	low STR_2
   604  001512  6E5C               	movwf	printf@fmt^0,c
   605  001514  0E08               	movlw	high STR_2
   606  001516  6E5D               	movwf	(printf@fmt+1)^0,c
   607  001518  0EA1               	movlw	low (main@perro+2)
   608  00151A  6E5E               	movwf	(?_printf+2)^0,c
   609  00151C  0E00               	movlw	high (main@perro+2)
   610  00151E  6E5F               	movwf	(?_printf+3)^0,c
   611  001520  EC1A  F00B         	call	_printf	;wreg free
   612  001524                     
   613                           ;main.c: 27:     printf("La edad del perro es: %d\n",perro.edad);
   614  001524  0E1D               	movlw	low STR_3
   615  001526  6E5C               	movwf	printf@fmt^0,c
   616  001528  0E08               	movlw	high STR_3
   617  00152A  6E5D               	movwf	(printf@fmt+1)^0,c
   618  00152C  C0AB  F05E         	movff	main@perro+12,?_printf+2
   619  001530  C0AC  F05F         	movff	main@perro+13,?_printf+3
   620  001534  EC1A  F00B         	call	_printf	;wreg free
   621  001538                     l13:
   622  001538  EF9C  F00A         	goto	l13
   623  00153C  EF00  F000         	goto	start
   624  001540                     __end_of_main:
   625                           	callstack 0
   626                           
   627 ;; *************** function _printf *****************
   628 ;; Defined at:
   629 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   632 ;;		 -> STR_3(26), STR_2(28), STR_1(24), 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  ap              2    0[BANK0 ] PTR void [1]
   635 ;;		 -> ?_printf(2), 
   636 ;;  ret             2    0        int 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  2   91[COMRAM] int 
   639 ;; Registers used:
   640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         4       0       0       0       0       0       0       0       0
   647 ;;      Locals:         0       2       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         4       2       0       0       0       0       0       0       0
   650 ;;Total ram usage:        6 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 7
   653 ;; This function calls:
   654 ;;		_vfprintf
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text1
   661  001634                     __ptext1:
   662                           	callstack 0
   663  001634                     _printf:
   664                           	callstack 23
   665  001634  0E5E               	movlw	low (?_printf+2)
   666  001636  0100               	movlb	0	; () banked
   667  001638  6F9D               	movwf	printf@ap& (0+255),b
   668  00163A  0E00               	movlw	high (?_printf+2)
   669  00163C  6F9E               	movwf	(printf@ap+1)& (0+255),b
   670  00163E                     
   671                           ; BSR set to: 0
   672  00163E  0E00               	movlw	0
   673  001640  6E54               	movwf	vfprintf@fp^0,c
   674  001642  0E00               	movlw	0
   675  001644  6E55               	movwf	(vfprintf@fp+1)^0,c
   676  001646  C05C  F056         	movff	printf@fmt,vfprintf@fmt
   677  00164A  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
   678  00164E  0E9D               	movlw	low printf@ap
   679  001650  6E58               	movwf	vfprintf@ap^0,c
   680  001652  0E00               	movlw	high printf@ap
   681  001654  6E59               	movwf	(vfprintf@ap+1)^0,c
   682  001656  EC40  F00A         	call	_vfprintf	;wreg free
   683  00165A  0012               	return		;funcret
   684  00165C                     __end_of_printf:
   685                           	callstack 0
   686                           
   687 ;; *************** function _vfprintf *****************
   688 ;; Defined at:
   689 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
   692 ;;		 -> NULL(0), 
   693 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
   694 ;;		 -> STR_3(26), STR_2(28), STR_1(24), 
   695 ;;  ap              2   87[COMRAM] PTR PTR void 
   696 ;;		 -> printf@ap(2), 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
   699 ;;		 -> STR_3(26), STR_2(28), STR_1(24), 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  2   83[COMRAM] int 
   702 ;; Registers used:
   703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   709 ;;      Params:         6       0       0       0       0       0       0       0       0
   710 ;;      Locals:         2       0       0       0       0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0       0       0
   712 ;;      Totals:         8       0       0       0       0       0       0       0       0
   713 ;;Total ram usage:        8 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 6
   716 ;; This function calls:
   717 ;;		_vfpfcnvrt
   718 ;; This function is called by:
   719 ;;		_printf
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text2
   724  001480                     __ptext2:
   725                           	callstack 0
   726  001480                     _vfprintf:
   727                           	callstack 23
   728  001480                     
   729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   730  001480  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
   731  001484  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   732  001488                     
   733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   734  001488  0E00               	movlw	0
   735  00148A  0100               	movlb	0	; () banked
   736  00148C  6F61               	movwf	(_nout+1)& (0+255),b
   737  00148E  0E00               	movlw	0
   738  001490  6F60               	movwf	_nout& (0+255),b
   739                           
   740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   741  001492  EF5E  F00A         	goto	l1536
   742  001496                     l1534:
   743                           
   744                           ; BSR set to: 0
   745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   746  001496  C054  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   747  00149A  C055  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   748  00149E  0E5A               	movlw	low vfprintf@cfmt
   749  0014A0  6E42               	movwf	vfpfcnvrt@fmt^0,c
   750  0014A2  0E00               	movlw	high vfprintf@cfmt
   751  0014A4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   752  0014A6  C058  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   753  0014AA  C059  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   754  0014AE  EC9B  F005         	call	_vfpfcnvrt	;wreg free
   755  0014B2  5040               	movf	?_vfpfcnvrt^0,w,c
   756  0014B4  0100               	movlb	0	; () banked
   757  0014B6  2760               	addwf	_nout& (0+255),f,b
   758  0014B8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   759  0014BA  2361               	addwfc	(_nout+1)& (0+255),f,b
   760  0014BC                     l1536:
   761                           
   762                           ; BSR set to: 0
   763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   764  0014BC  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
   765  0014C0  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   766  0014C4                     	if	0	;tblptru may be non-zero
   767  0014C4                     	endif
   768  0014C4                     	if	0	;tblptru may be non-zero
   769  0014C4                     	endif
   770  0014C4  0008               	tblrd		*
   771  0014C6  50F5               	movf	tablat,w,c
   772  0014C8  0900               	iorlw	0
   773  0014CA  A4D8               	btfss	status,2,c
   774  0014CC  EF6A  F00A         	goto	u1231
   775  0014D0  EF6C  F00A         	goto	u1230
   776  0014D4                     u1231:
   777  0014D4  EF4B  F00A         	goto	l1534
   778  0014D8                     u1230:
   779  0014D8                     
   780                           ; BSR set to: 0
   781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   782  0014D8  C060  F054         	movff	_nout,?_vfprintf
   783  0014DC  C061  F055         	movff	_nout+1,?_vfprintf+1
   784  0014E0                     
   785                           ; BSR set to: 0
   786  0014E0  0012               	return		;funcret
   787  0014E2                     __end_of_vfprintf:
   788                           	callstack 0
   789                           
   790 ;; *************** function _vfpfcnvrt *****************
   791 ;; Defined at:
   792 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   795 ;;		 -> NULL(0), 
   796 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   797 ;;		 -> vfprintf@cfmt(2), 
   798 ;;  ap              2   67[COMRAM] PTR PTR void 
   799 ;;		 -> printf@ap(2), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  ll              8   71[COMRAM] long long 
   802 ;;  llu             8    0        unsigned long long 
   803 ;;  f               4    0        unsigned long long 
   804 ;;  vp              3    0        PTR void 
   805 ;;  ct              3    0        unsigned char [3]
   806 ;;  cp              2   79[COMRAM] PTR unsigned char 
   807 ;;		 -> ?_printf(2), main@perro(14), 
   808 ;;  i               2    0        int 
   809 ;;  done            2    0        int 
   810 ;;  c               1    0        unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  2   63[COMRAM] int 
   813 ;; Registers used:
   814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         6       0       0       0       0       0       0       0       0
   821 ;;      Locals:        12       0       0       0       0       0       0       0       0
   822 ;;      Temps:          2       0       0       0       0       0       0       0       0
   823 ;;      Totals:        20       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:       20 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; Hardware stack levels required when called: 5
   827 ;; This function calls:
   828 ;;		_dtoa
   829 ;;		_fputc
   830 ;;		_stoa
   831 ;;		_strncmp
   832 ;; This function is called by:
   833 ;;		_vfprintf
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text3
   838  000B36                     __ptext3:
   839                           	callstack 0
   840  000B36                     _vfpfcnvrt:
   841                           	callstack 23
   842  000B36                     
   843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   844  000B36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   845  000B3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   846  000B3E  CFDE FFF6          	movff	postinc2,tblptrl
   847  000B42  CFDD FFF7          	movff	postdec2,tblptrh
   848  000B46                     	if	0	;tblptru may be non-zero
   849  000B46                     	endif
   850  000B46                     	if	0	;tblptru may be non-zero
   851  000B46                     	endif
   852  000B46  0008               	tblrd		*
   853  000B48  50F5               	movf	tablat,w,c
   854  000B4A  0A25               	xorlw	37
   855  000B4C  A4D8               	btfss	status,2,c
   856  000B4E  EFAB  F005         	goto	u1161
   857  000B52  EFAD  F005         	goto	u1160
   858  000B56                     u1161:
   859  000B56  EFCE  F006         	goto	l1522
   860  000B5A                     u1160:
   861  000B5A                     
   862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   863  000B5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   864  000B5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   865  000B62  2ADE               	incf	postinc2,f,c
   866  000B64  0E00               	movlw	0
   867  000B66  22DD               	addwfc	postdec2,f,c
   868  000B68                     
   869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   870  000B68  0E00               	movlw	0
   871  000B6A  0100               	movlb	0	; () banked
   872  000B6C  6F63               	movwf	(_width+1)& (0+255),b
   873  000B6E  0E00               	movlw	0
   874  000B70  6F62               	movwf	_width& (0+255),b
   875  000B72  C062  F066         	movff	_width,_flags
   876  000B76  C063  F067         	movff	_width+1,_flags+1
   877  000B7A                     
   878                           ; BSR set to: 0
   879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   880  000B7A  6964               	setf	_prec& (0+255),b
   881  000B7C  6965               	setf	(_prec+1)& (0+255),b
   882  000B7E                     
   883                           ; BSR set to: 0
   884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   885  000B7E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   886  000B82  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   887  000B86  CFDE FFF6          	movff	postinc2,tblptrl
   888  000B8A  CFDD FFF7          	movff	postdec2,tblptrh
   889  000B8E                     	if	0	;tblptru may be non-zero
   890  000B8E                     	endif
   891  000B8E                     	if	0	;tblptru may be non-zero
   892  000B8E                     	endif
   893  000B8E  0008               	tblrd		*
   894  000B90  50F5               	movf	tablat,w,c
   895  000B92  0A64               	xorlw	100
   896  000B94  B4D8               	btfsc	status,2,c
   897  000B96  EFCF  F005         	goto	u1171
   898  000B9A  EFD1  F005         	goto	u1170
   899  000B9E                     u1171:
   900  000B9E  EFE3  F005         	goto	l1482
   901  000BA2                     u1170:
   902  000BA2                     
   903                           ; BSR set to: 0
   904  000BA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   905  000BA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   906  000BAA  CFDE FFF6          	movff	postinc2,tblptrl
   907  000BAE  CFDD FFF7          	movff	postdec2,tblptrh
   908  000BB2                     	if	0	;tblptru may be non-zero
   909  000BB2                     	endif
   910  000BB2                     	if	0	;tblptru may be non-zero
   911  000BB2                     	endif
   912  000BB2  0008               	tblrd		*
   913  000BB4  50F5               	movf	tablat,w,c
   914  000BB6  0A69               	xorlw	105
   915  000BB8  A4D8               	btfss	status,2,c
   916  000BBA  EFE1  F005         	goto	u1181
   917  000BBE  EFE3  F005         	goto	u1180
   918  000BC2                     u1181:
   919  000BC2  EF23  F006         	goto	l1488
   920  000BC6                     u1180:
   921  000BC6                     l1482:
   922                           
   923                           ; BSR set to: 0
   924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
   925  000BC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   926  000BCA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   927  000BCE  2ADE               	incf	postinc2,f,c
   928  000BD0  0E00               	movlw	0
   929  000BD2  22DD               	addwfc	postdec2,f,c
   930                           
   931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   932  000BD4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   933  000BD8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   934  000BDC  CFDF F046          	movff	indf2,??_vfpfcnvrt
   935  000BE0  0E02               	movlw	2
   936  000BE2  26DE               	addwf	postinc2,f,c
   937  000BE4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
   938  000BE8  0E00               	movlw	0
   939  000BEA  22DD               	addwfc	postdec2,f,c
   940  000BEC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
   941  000BF0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   942  000BF4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
   943  000BF8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
   944  000BFC  0E00               	movlw	0
   945  000BFE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
   946  000C00  0EFF               	movlw	-1
   947  000C02  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
   948  000C04  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
   949  000C06  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
   950  000C08  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
   951  000C0A  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
   952  000C0C  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
   953  000C0E                     
   954                           ; BSR set to: 0
   955                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
   956  000C0E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
   957  000C12  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   958  000C16  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
   959  000C1A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   960  000C1E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   961  000C22  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   962  000C26  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   963  000C2A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
   964  000C2E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
   965  000C32  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
   966  000C36  EC2A  F004         	call	_dtoa	;wreg free
   967  000C3A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
   968  000C3E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
   969  000C42  EFE9  F006         	goto	l799
   970  000C46                     l1488:
   971                           
   972                           ; BSR set to: 0
   973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
   974  000C46  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   975  000C4A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   976  000C4E  CFDE FFF6          	movff	postinc2,tblptrl
   977  000C52  CFDD FFF7          	movff	postdec2,tblptrh
   978  000C56                     	if	0	;tblptru may be non-zero
   979  000C56                     	endif
   980  000C56                     	if	0	;tblptru may be non-zero
   981  000C56                     	endif
   982  000C56  0008               	tblrd		*
   983  000C58  50F5               	movf	tablat,w,c
   984  000C5A  0A73               	xorlw	115
   985  000C5C  B4D8               	btfsc	status,2,c
   986  000C5E  EF33  F006         	goto	u1191
   987  000C62  EF35  F006         	goto	u1190
   988  000C66                     u1191:
   989  000C66  EF50  F006         	goto	l1492
   990  000C6A                     u1190:
   991  000C6A                     
   992                           ; BSR set to: 0
   993  000C6A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   994  000C6E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   995  000C72  CFDE F001          	movff	postinc2,strncmp@_l
   996  000C76  CFDD F002          	movff	postdec2,strncmp@_l+1
   997  000C7A  0E4F               	movlw	low STR_4
   998  000C7C  6E03               	movwf	strncmp@_r^0,c
   999  000C7E  0E08               	movlw	high STR_4
  1000  000C80  6E04               	movwf	(strncmp@_r+1)^0,c
  1001  000C82  0E00               	movlw	0
  1002  000C84  6E06               	movwf	(strncmp@n+1)^0,c
  1003  000C86  0E03               	movlw	3
  1004  000C88  6E05               	movwf	strncmp@n^0,c
  1005  000C8A  EC23  F009         	call	_strncmp	;wreg free
  1006  000C8E  5001               	movf	?_strncmp^0,w,c
  1007  000C90  1002               	iorwf	(?_strncmp+1)^0,w,c
  1008  000C92  A4D8               	btfss	status,2,c
  1009  000C94  EF4E  F006         	goto	u1201
  1010  000C98  EF50  F006         	goto	u1200
  1011  000C9C                     u1201:
  1012  000C9C  EF98  F006         	goto	l1506
  1013  000CA0                     u1200:
  1014  000CA0                     l1492:
  1015                           
  1016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1173:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  1017  000CA0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1018  000CA4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1019  000CA8  CFDE FFF6          	movff	postinc2,tblptrl
  1020  000CAC  CFDD FFF7          	movff	postdec2,tblptrh
  1021  000CB0                     	if	0	;tblptru may be non-zero
  1022  000CB0                     	endif
  1023  000CB0                     	if	0	;tblptru may be non-zero
  1024  000CB0                     	endif
  1025  000CB0  0008               	tblrd		*
  1026  000CB2  50F5               	movf	tablat,w,c
  1027  000CB4  0A73               	xorlw	115
  1028  000CB6  B4D8               	btfsc	status,2,c
  1029  000CB8  EF60  F006         	goto	u1211
  1030  000CBC  EF62  F006         	goto	u1210
  1031  000CC0                     u1211:
  1032  000CC0  EF68  F006         	goto	l1496
  1033  000CC4                     u1210:
  1034  000CC4  0E00               	movlw	0
  1035  000CC6  6E53               	movwf	(_vfpfcnvrt$607+1)^0,c
  1036  000CC8  0E03               	movlw	3
  1037  000CCA  6E52               	movwf	_vfpfcnvrt$607^0,c
  1038  000CCC  EF6C  F006         	goto	l1498
  1039  000CD0                     l1496:
  1040  000CD0  0E00               	movlw	0
  1041  000CD2  6E53               	movwf	(_vfpfcnvrt$607+1)^0,c
  1042  000CD4  0E01               	movlw	1
  1043  000CD6  6E52               	movwf	_vfpfcnvrt$607^0,c
  1044  000CD8                     l1498:
  1045  000CD8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1046  000CDC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1047  000CE0  5052               	movf	_vfpfcnvrt$607^0,w,c
  1048  000CE2  26DE               	addwf	postinc2,f,c
  1049  000CE4  5053               	movf	(_vfpfcnvrt$607+1)^0,w,c
  1050  000CE6  22DD               	addwfc	postdec2,f,c
  1051  000CE8                     
  1052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1053  000CE8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1054  000CEC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1055  000CF0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1056  000CF4  0E02               	movlw	2
  1057  000CF6  26DE               	addwf	postinc2,f,c
  1058  000CF8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1059  000CFC  0E00               	movlw	0
  1060  000CFE  22DD               	addwfc	postdec2,f,c
  1061  000D00  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1062  000D04  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1063  000D08  CFDE F050          	movff	postinc2,vfpfcnvrt@cp
  1064  000D0C  CFDD F051          	movff	postdec2,vfpfcnvrt@cp+1
  1065  000D10                     
  1066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  1067  000D10  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  1068  000D14  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1069  000D18  C050  F00C         	movff	vfpfcnvrt@cp,stoa@s
  1070  000D1C  C051  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1071  000D20  ECAE  F007         	call	_stoa	;wreg free
  1072  000D24  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  1073  000D28  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  1074  000D2C  EFE9  F006         	goto	l799
  1075  000D30                     l1506:
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1078  000D30  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1079  000D34  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1080  000D38  CFDE FFF6          	movff	postinc2,tblptrl
  1081  000D3C  CFDD FFF7          	movff	postdec2,tblptrh
  1082  000D40                     	if	0	;tblptru may be non-zero
  1083  000D40                     	endif
  1084  000D40                     	if	0	;tblptru may be non-zero
  1085  000D40                     	endif
  1086  000D40  0008               	tblrd		*
  1087  000D42  50F5               	movf	tablat,w,c
  1088  000D44  0A25               	xorlw	37
  1089  000D46  A4D8               	btfss	status,2,c
  1090  000D48  EFA8  F006         	goto	u1221
  1091  000D4C  EFAA  F006         	goto	u1220
  1092  000D50                     u1221:
  1093  000D50  EFC1  F006         	goto	l1516
  1094  000D54                     u1220:
  1095  000D54                     
  1096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1097  000D54  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1098  000D58  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1099  000D5C  2ADE               	incf	postinc2,f,c
  1100  000D5E  0E00               	movlw	0
  1101  000D60  22DD               	addwfc	postdec2,f,c
  1102  000D62                     
  1103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1104  000D62  0E00               	movlw	0
  1105  000D64  6E02               	movwf	(fputc@c+1)^0,c
  1106  000D66  0E25               	movlw	37
  1107  000D68  6E01               	movwf	fputc@c^0,c
  1108  000D6A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1109  000D6E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1110  000D72  ECF5  F009         	call	_fputc	;wreg free
  1111  000D76                     l1512:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1114  000D76  0E00               	movlw	0
  1115  000D78  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1116  000D7A  0E01               	movlw	1
  1117  000D7C  6E40               	movwf	?_vfpfcnvrt^0,c
  1118  000D7E  EFE9  F006         	goto	l799
  1119  000D82                     l1516:
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1122  000D82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1123  000D86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1124  000D8A  2ADE               	incf	postinc2,f,c
  1125  000D8C  0E00               	movlw	0
  1126  000D8E  22DD               	addwfc	postdec2,f,c
  1127  000D90                     
  1128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1129  000D90  0E00               	movlw	0
  1130  000D92  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1131  000D94  0E00               	movlw	0
  1132  000D96  6E40               	movwf	?_vfpfcnvrt^0,c
  1133  000D98  EFE9  F006         	goto	l799
  1134  000D9C                     l1522:
  1135                           
  1136                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1137  000D9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1138  000DA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1139  000DA4  CFDE FFF6          	movff	postinc2,tblptrl
  1140  000DA8  CFDD FFF7          	movff	postdec2,tblptrh
  1141  000DAC                     	if	0	;tblptru may be non-zero
  1142  000DAC                     	endif
  1143  000DAC                     	if	0	;tblptru may be non-zero
  1144  000DAC                     	endif
  1145  000DAC  0008               	tblrd		*
  1146  000DAE  50F5               	movf	tablat,w,c
  1147  000DB0  6E01               	movwf	fputc@c^0,c
  1148  000DB2  6A02               	clrf	(fputc@c+1)^0,c
  1149  000DB4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1150  000DB8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1151  000DBC  ECF5  F009         	call	_fputc	;wreg free
  1152  000DC0                     
  1153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1154  000DC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1155  000DC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1156  000DC8  2ADE               	incf	postinc2,f,c
  1157  000DCA  0E00               	movlw	0
  1158  000DCC  22DD               	addwfc	postdec2,f,c
  1159  000DCE  EFBB  F006         	goto	l1512
  1160  000DD2                     l799:
  1161  000DD2  0012               	return		;funcret
  1162  000DD4                     __end_of_vfpfcnvrt:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _strncmp *****************
  1166 ;; Defined at:
  1167 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1170 ;;		 -> STR_3(26), STR_2(28), STR_1(24), 
  1171 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1172 ;;		 -> STR_6(4), 
  1173 ;;  n               2    4[COMRAM] unsigned int 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1176 ;;		 -> STR_6(4), 
  1177 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1178 ;;		 -> STR_3(26), STR_2(28), STR_1(24), 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2    0[COMRAM] int 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         6       0       0       0       0       0       0       0       0
  1189 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1190 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1191 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1192 ;;Total ram usage:       11 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_vfpfcnvrt
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text4
  1202  001246                     __ptext4:
  1203                           	callstack 0
  1204  001246                     _strncmp:
  1205                           	callstack 27
  1206  001246  C001  F008         	movff	strncmp@_l,strncmp@l
  1207  00124A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1208  00124E  C003  F00A         	movff	strncmp@_r,strncmp@r
  1209  001252  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1210  001256  0605               	decf	strncmp@n^0,f,c
  1211  001258  A0D8               	btfss	status,0,c
  1212  00125A  0606               	decf	(strncmp@n+1)^0,f,c
  1213  00125C  2805               	incf	strncmp@n^0,w,c
  1214  00125E  E106               	bnz	u1111
  1215  001260  2806               	incf	(strncmp@n+1)^0,w,c
  1216  001262  A4D8               	btfss	status,2,c
  1217  001264  EF36  F009         	goto	u1111
  1218  001268  EF38  F009         	goto	u1110
  1219  00126C                     u1111:
  1220  00126C  EF45  F009         	goto	l1458
  1221  001270                     u1110:
  1222  001270  0E00               	movlw	0
  1223  001272  6E02               	movwf	(?_strncmp+1)^0,c
  1224  001274  0E00               	movlw	0
  1225  001276  6E01               	movwf	?_strncmp^0,c
  1226  001278  EF91  F009         	goto	l853
  1227  00127C                     l1456:
  1228  00127C  4A08               	infsnz	strncmp@l^0,f,c
  1229  00127E  2A09               	incf	(strncmp@l+1)^0,f,c
  1230  001280  4A0A               	infsnz	strncmp@r^0,f,c
  1231  001282  2A0B               	incf	(strncmp@r+1)^0,f,c
  1232  001284  0605               	decf	strncmp@n^0,f,c
  1233  001286  A0D8               	btfss	status,0,c
  1234  001288  0606               	decf	(strncmp@n+1)^0,f,c
  1235  00128A                     l1458:
  1236  00128A  C008  FFF6         	movff	strncmp@l,tblptrl
  1237  00128E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  1238  001292                     	if	0	;tblptru may be non-zero
  1239  001292                     	endif
  1240  001292                     	if	0	;tblptru may be non-zero
  1241  001292                     	endif
  1242  001292  0008               	tblrd		*
  1243  001294  50F5               	movf	tablat,w,c
  1244  001296  0900               	iorlw	0
  1245  001298  B4D8               	btfsc	status,2,c
  1246  00129A  EF51  F009         	goto	u1121
  1247  00129E  EF53  F009         	goto	u1120
  1248  0012A2                     u1121:
  1249  0012A2  EF7F  F009         	goto	l1466
  1250  0012A6                     u1120:
  1251  0012A6  C00A  FFF6         	movff	strncmp@r,tblptrl
  1252  0012AA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1253  0012AE                     	if	0	;tblptru may be non-zero
  1254  0012AE                     	endif
  1255  0012AE                     	if	0	;tblptru may be non-zero
  1256  0012AE                     	endif
  1257  0012AE  0008               	tblrd		*
  1258  0012B0  50F5               	movf	tablat,w,c
  1259  0012B2  0900               	iorlw	0
  1260  0012B4  B4D8               	btfsc	status,2,c
  1261  0012B6  EF5F  F009         	goto	u1131
  1262  0012BA  EF61  F009         	goto	u1130
  1263  0012BE                     u1131:
  1264  0012BE  EF7F  F009         	goto	l1466
  1265  0012C2                     u1130:
  1266  0012C2  5005               	movf	strncmp@n^0,w,c
  1267  0012C4  1006               	iorwf	(strncmp@n+1)^0,w,c
  1268  0012C6  B4D8               	btfsc	status,2,c
  1269  0012C8  EF68  F009         	goto	u1141
  1270  0012CC  EF6A  F009         	goto	u1140
  1271  0012D0                     u1141:
  1272  0012D0  EF7F  F009         	goto	l1466
  1273  0012D4                     u1140:
  1274  0012D4  C008  FFF6         	movff	strncmp@l,tblptrl
  1275  0012D8  C009  FFF7         	movff	strncmp@l+1,tblptrh
  1276  0012DC                     	if	0	;tblptru may be non-zero
  1277  0012DC                     	endif
  1278  0012DC                     	if	0	;tblptru may be non-zero
  1279  0012DC                     	endif
  1280  0012DC  0008               	tblrd		*
  1281  0012DE  CFF5 F007          	movff	tablat,??_strncmp
  1282  0012E2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1283  0012E6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1284  0012EA                     	if	0	;tblptru may be non-zero
  1285  0012EA                     	endif
  1286  0012EA                     	if	0	;tblptru may be non-zero
  1287  0012EA                     	endif
  1288  0012EA  0008               	tblrd		*
  1289  0012EC  50F5               	movf	tablat,w,c
  1290  0012EE  1807               	xorwf	??_strncmp^0,w,c
  1291  0012F0  B4D8               	btfsc	status,2,c
  1292  0012F2  EF7D  F009         	goto	u1151
  1293  0012F6  EF7F  F009         	goto	u1150
  1294  0012FA                     u1151:
  1295  0012FA  EF3E  F009         	goto	l1456
  1296  0012FE                     u1150:
  1297  0012FE                     l1466:
  1298  0012FE  C008  FFF6         	movff	strncmp@l,tblptrl
  1299  001302  C009  FFF7         	movff	strncmp@l+1,tblptrh
  1300  001306                     	if	0	;tblptru may be non-zero
  1301  001306                     	endif
  1302  001306                     	if	0	;tblptru may be non-zero
  1303  001306                     	endif
  1304  001306  0008               	tblrd		*
  1305  001308  CFF5 F007          	movff	tablat,??_strncmp
  1306  00130C  C00A  FFF6         	movff	strncmp@r,tblptrl
  1307  001310  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1308  001314                     	if	0	;tblptru may be non-zero
  1309  001314                     	endif
  1310  001314                     	if	0	;tblptru may be non-zero
  1311  001314                     	endif
  1312  001314  0008               	tblrd		*
  1313  001316  50F5               	movf	tablat,w,c
  1314  001318  5C07               	subwf	??_strncmp^0,w,c
  1315  00131A  6E01               	movwf	?_strncmp^0,c
  1316  00131C  6A02               	clrf	(?_strncmp+1)^0,c
  1317  00131E  A0D8               	btfss	status,0,c
  1318  001320  0602               	decf	(?_strncmp+1)^0,f,c
  1319  001322                     l853:
  1320  001322  0012               	return		;funcret
  1321  001324                     __end_of_strncmp:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _stoa *****************
  1325 ;; Defined at:
  1326 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  1329 ;;		 -> NULL(0), 
  1330 ;;  s               2   11[COMRAM] PTR unsigned char 
  1331 ;;		 -> ?_printf(2), main@perro(14), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  nuls            7   14[COMRAM] unsigned char [7]
  1334 ;;  l               2   29[COMRAM] int 
  1335 ;;  p               2   27[COMRAM] int 
  1336 ;;  cp              2   25[COMRAM] PTR unsigned char 
  1337 ;;		 -> stoa@nuls(7), ?_printf(2), main@perro(14), 
  1338 ;;  w               2   23[COMRAM] int 
  1339 ;;  i               2   21[COMRAM] int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2    9[COMRAM] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1349 ;;      Params:         4       0       0       0       0       0       0       0       0
  1350 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1351 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1352 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1353 ;;Total ram usage:       22 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 2
  1356 ;; This function calls:
  1357 ;;		_fputc
  1358 ;;		_strlen
  1359 ;; This function is called by:
  1360 ;;		_vfpfcnvrt
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text5
  1365  000F5C                     __ptext5:
  1366                           	callstack 0
  1367  000F5C                     _stoa:
  1368                           	callstack 25
  1369  000F5C                     
  1370                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  1371  000F5C  EE20  F096         	lfsr	2,stoa@F1150
  1372  000F60  EE10  F00F         	lfsr	1,stoa@nuls
  1373  000F64  0E06               	movlw	6
  1374  000F66                     u1021:
  1375  000F66  CFDB FFE3          	movff	plusw2,plusw1
  1376  000F6A  06E8               	decf	wreg,f,c
  1377  000F6C  E2FC               	bc	u1021
  1378  000F6E                     
  1379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  1380  000F6E  C00C  F01A         	movff	stoa@s,stoa@cp
  1381  000F72  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  1382  000F76                     
  1383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  1384  000F76  501A               	movf	stoa@cp^0,w,c
  1385  000F78  101B               	iorwf	(stoa@cp+1)^0,w,c
  1386  000F7A  A4D8               	btfss	status,2,c
  1387  000F7C  EFC2  F007         	goto	u1031
  1388  000F80  EFC4  F007         	goto	u1030
  1389  000F84                     u1031:
  1390  000F84  EFC8  F007         	goto	l1416
  1391  000F88                     u1030:
  1392  000F88                     
  1393                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  1394  000F88  0E0F               	movlw	low stoa@nuls
  1395  000F8A  6E1A               	movwf	stoa@cp^0,c
  1396  000F8C  0E00               	movlw	high stoa@nuls
  1397  000F8E  6E1B               	movwf	(stoa@cp+1)^0,c
  1398  000F90                     l1416:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  1401  000F90  C01A  F001         	movff	stoa@cp,strlen@s
  1402  000F94  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  1403  000F98  ECFF  F00A         	call	_strlen	;wreg free
  1404  000F9C  C001  F01E         	movff	?_strlen,stoa@l
  1405  000FA0  C002  F01F         	movff	?_strlen+1,stoa@l+1
  1406  000FA4                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  1408  000FA4  C064  F01C         	movff	_prec,stoa@p
  1409  000FA8  C065  F01D         	movff	_prec+1,stoa@p+1
  1410  000FAC                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  1412  000FAC  BE1D               	btfsc	(stoa@p+1)^0,7,c
  1413  000FAE  EFDB  F007         	goto	u1041
  1414  000FB2  EFDD  F007         	goto	u1040
  1415  000FB6                     u1041:
  1416  000FB6  EFF2  F007         	goto	l778
  1417  000FBA                     u1040:
  1418  000FBA  501E               	movf	stoa@l^0,w,c
  1419  000FBC  5C1C               	subwf	stoa@p^0,w,c
  1420  000FBE  501D               	movf	(stoa@p+1)^0,w,c
  1421  000FC0  0A80               	xorlw	128
  1422  000FC2  6E0E               	movwf	??_stoa^0,c
  1423  000FC4  501F               	movf	(stoa@l+1)^0,w,c
  1424  000FC6  0A80               	xorlw	128
  1425  000FC8  580E               	subwfb	??_stoa^0,w,c
  1426  000FCA  A0D8               	btfss	status,0,c
  1427  000FCC  EFEA  F007         	goto	u1051
  1428  000FD0  EFEC  F007         	goto	u1050
  1429  000FD4                     u1051:
  1430  000FD4  EFEE  F007         	goto	l776
  1431  000FD8                     u1050:
  1432  000FD8  EFF2  F007         	goto	l778
  1433  000FDC                     l776:
  1434  000FDC  C01C  F01E         	movff	stoa@p,stoa@l
  1435  000FE0  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  1436  000FE4                     l778:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 583:     p = l;
  1439  000FE4  C01E  F01C         	movff	stoa@l,stoa@p
  1440  000FE8  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  1443  000FEC  C062  F018         	movff	_width,stoa@w
  1444  000FF0  C063  F019         	movff	_width+1,stoa@w+1
  1445                           
  1446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  1447  000FF4  0100               	movlb	0	; () banked
  1448  000FF6  B166               	btfsc	_flags& (0+255),0,b
  1449  000FF8  EF00  F008         	goto	u1061
  1450  000FFC  EF02  F008         	goto	u1060
  1451  001000                     u1061:
  1452  001000  EF1F  F008         	goto	l1432
  1453  001004                     u1060:
  1454  001004  EF10  F008         	goto	l1430
  1455  001008                     l1426:
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  1458  001008  0E00               	movlw	0
  1459  00100A  6E02               	movwf	(fputc@c+1)^0,c
  1460  00100C  0E20               	movlw	32
  1461  00100E  6E01               	movwf	fputc@c^0,c
  1462  001010  C00A  F003         	movff	stoa@fp,fputc@fp
  1463  001014  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  1464  001018  ECF5  F009         	call	_fputc	;wreg free
  1465  00101C                     
  1466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  1467  00101C  4A1E               	infsnz	stoa@l^0,f,c
  1468  00101E  2A1F               	incf	(stoa@l+1)^0,f,c
  1469  001020                     l1430:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  1472  001020  5018               	movf	stoa@w^0,w,c
  1473  001022  5C1E               	subwf	stoa@l^0,w,c
  1474  001024  501F               	movf	(stoa@l+1)^0,w,c
  1475  001026  0A80               	xorlw	128
  1476  001028  6E0E               	movwf	??_stoa^0,c
  1477  00102A  5019               	movf	(stoa@w+1)^0,w,c
  1478  00102C  0A80               	xorlw	128
  1479  00102E  580E               	subwfb	??_stoa^0,w,c
  1480  001030  A0D8               	btfss	status,0,c
  1481  001032  EF1D  F008         	goto	u1071
  1482  001036  EF1F  F008         	goto	u1070
  1483  00103A                     u1071:
  1484  00103A  EF04  F008         	goto	l1426
  1485  00103E                     u1070:
  1486  00103E                     l1432:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  1489  00103E  0E00               	movlw	0
  1490  001040  6E17               	movwf	(stoa@i+1)^0,c
  1491  001042  0E00               	movlw	0
  1492  001044  6E16               	movwf	stoa@i^0,c
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  1495  001046  EF38  F008         	goto	l1440
  1496  00104A                     l1434:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  1499  00104A  C01A  FFD9         	movff	stoa@cp,fsr2l
  1500  00104E  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  1501  001052  50DF               	movf	indf2,w,c
  1502  001054  6E0E               	movwf	??_stoa^0,c
  1503  001056  500E               	movf	??_stoa^0,w,c
  1504  001058  6E01               	movwf	fputc@c^0,c
  1505  00105A  6A02               	clrf	(fputc@c+1)^0,c
  1506  00105C  C00A  F003         	movff	stoa@fp,fputc@fp
  1507  001060  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  1508  001064  ECF5  F009         	call	_fputc	;wreg free
  1509  001068                     
  1510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  1511  001068  4A1A               	infsnz	stoa@cp^0,f,c
  1512  00106A  2A1B               	incf	(stoa@cp+1)^0,f,c
  1513  00106C                     
  1514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 599:         ++i;
  1515  00106C  4A16               	infsnz	stoa@i^0,f,c
  1516  00106E  2A17               	incf	(stoa@i+1)^0,f,c
  1517  001070                     l1440:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  1520  001070  501C               	movf	stoa@p^0,w,c
  1521  001072  5C16               	subwf	stoa@i^0,w,c
  1522  001074  5017               	movf	(stoa@i+1)^0,w,c
  1523  001076  0A80               	xorlw	128
  1524  001078  6E0E               	movwf	??_stoa^0,c
  1525  00107A  501D               	movf	(stoa@p+1)^0,w,c
  1526  00107C  0A80               	xorlw	128
  1527  00107E  580E               	subwfb	??_stoa^0,w,c
  1528  001080  A0D8               	btfss	status,0,c
  1529  001082  EF45  F008         	goto	u1081
  1530  001086  EF47  F008         	goto	u1080
  1531  00108A                     u1081:
  1532  00108A  EF25  F008         	goto	l1434
  1533  00108E                     u1080:
  1534  00108E                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  1536  00108E  0100               	movlb	0	; () banked
  1537  001090  A166               	btfss	_flags& (0+255),0,b
  1538  001092  EF4D  F008         	goto	u1091
  1539  001096  EF4F  F008         	goto	u1090
  1540  00109A                     u1091:
  1541  00109A  EF6C  F008         	goto	l788
  1542  00109E                     u1090:
  1543  00109E  EF5D  F008         	goto	l1448
  1544  0010A2                     l1444:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  1547  0010A2  0E00               	movlw	0
  1548  0010A4  6E02               	movwf	(fputc@c+1)^0,c
  1549  0010A6  0E20               	movlw	32
  1550  0010A8  6E01               	movwf	fputc@c^0,c
  1551  0010AA  C00A  F003         	movff	stoa@fp,fputc@fp
  1552  0010AE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  1553  0010B2  ECF5  F009         	call	_fputc	;wreg free
  1554  0010B6                     
  1555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  1556  0010B6  4A1E               	infsnz	stoa@l^0,f,c
  1557  0010B8  2A1F               	incf	(stoa@l+1)^0,f,c
  1558  0010BA                     l1448:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  1561  0010BA  5018               	movf	stoa@w^0,w,c
  1562  0010BC  5C1E               	subwf	stoa@l^0,w,c
  1563  0010BE  501F               	movf	(stoa@l+1)^0,w,c
  1564  0010C0  0A80               	xorlw	128
  1565  0010C2  6E0E               	movwf	??_stoa^0,c
  1566  0010C4  5019               	movf	(stoa@w+1)^0,w,c
  1567  0010C6  0A80               	xorlw	128
  1568  0010C8  580E               	subwfb	??_stoa^0,w,c
  1569  0010CA  A0D8               	btfss	status,0,c
  1570  0010CC  EF6A  F008         	goto	u1101
  1571  0010D0  EF6C  F008         	goto	u1100
  1572  0010D4                     u1101:
  1573  0010D4  EF51  F008         	goto	l1444
  1574  0010D8                     u1100:
  1575  0010D8                     l788:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  1578  0010D8  C01E  F00A         	movff	stoa@l,?_stoa
  1579  0010DC  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  1580  0010E0  0012               	return		;funcret
  1581  0010E2                     __end_of_stoa:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _dtoa *****************
  1585 ;; Defined at:
  1586 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1589 ;;		 -> NULL(0), 
  1590 ;;  d               8   29[COMRAM] long long 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  n               8   53[COMRAM] long long 
  1593 ;;  i               2   61[COMRAM] int 
  1594 ;;  s               2   51[COMRAM] int 
  1595 ;;  w               2   49[COMRAM] int 
  1596 ;;  p               2   47[COMRAM] int 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2   27[COMRAM] int 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1606 ;;      Params:        10       0       0       0       0       0       0       0       0
  1607 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1608 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1609 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1610 ;;Total ram usage:       36 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 4
  1613 ;; This function calls:
  1614 ;;		___aodiv
  1615 ;;		___aomod
  1616 ;;		_abs
  1617 ;;		_pad
  1618 ;; This function is called by:
  1619 ;;		_vfpfcnvrt
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text6
  1624  000854                     __ptext6:
  1625                           	callstack 0
  1626  000854                     _dtoa:
  1627                           	callstack 23
  1628  000854                     
  1629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1630  000854  C01E  F036         	movff	dtoa@d,dtoa@n
  1631  000858  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1632  00085C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1633  000860  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1634  000864  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1635  000868  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1636  00086C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1637  000870  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1638  000874                     
  1639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1640  000874  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1641  000876  EF3F  F004         	goto	u871
  1642  00087A  EF42  F004         	goto	u870
  1643  00087E                     u871:
  1644  00087E  0E01               	movlw	1
  1645  000880  EF43  F004         	goto	u880
  1646  000884                     u870:
  1647  000884  0E00               	movlw	0
  1648  000886                     u880:
  1649  000886  6E34               	movwf	dtoa@s^0,c
  1650  000888  6A35               	clrf	(dtoa@s+1)^0,c
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1653  00088A  5034               	movf	dtoa@s^0,w,c
  1654  00088C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1655  00088E  B4D8               	btfsc	status,2,c
  1656  000890  EF4C  F004         	goto	u891
  1657  000894  EF4E  F004         	goto	u890
  1658  000898                     u891:
  1659  000898  EF5E  F004         	goto	l1352
  1660  00089C                     u890:
  1661  00089C                     
  1662                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1663  00089C  1E3D               	comf	(dtoa@n+7)^0,f,c
  1664  00089E  1E3C               	comf	(dtoa@n+6)^0,f,c
  1665  0008A0  1E3B               	comf	(dtoa@n+5)^0,f,c
  1666  0008A2  1E3A               	comf	(dtoa@n+4)^0,f,c
  1667  0008A4  1E39               	comf	(dtoa@n+3)^0,f,c
  1668  0008A6  1E38               	comf	(dtoa@n+2)^0,f,c
  1669  0008A8  1E37               	comf	(dtoa@n+1)^0,f,c
  1670  0008AA  6C36               	negf	dtoa@n^0,c
  1671  0008AC  0E00               	movlw	0
  1672  0008AE  2237               	addwfc	(dtoa@n+1)^0,f,c
  1673  0008B0  2238               	addwfc	(dtoa@n+2)^0,f,c
  1674  0008B2  2239               	addwfc	(dtoa@n+3)^0,f,c
  1675  0008B4  223A               	addwfc	(dtoa@n+4)^0,f,c
  1676  0008B6  223B               	addwfc	(dtoa@n+5)^0,f,c
  1677  0008B8  223C               	addwfc	(dtoa@n+6)^0,f,c
  1678  0008BA  223D               	addwfc	(dtoa@n+7)^0,f,c
  1679  0008BC                     l1352:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1682  0008BC  0100               	movlb	0	; () banked
  1683  0008BE  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1684  0008C0  EF64  F004         	goto	u901
  1685  0008C4  EF66  F004         	goto	u900
  1686  0008C8                     u901:
  1687  0008C8  EF67  F004         	goto	l1356
  1688  0008CC                     u900:
  1689  0008CC                     
  1690                           ; BSR set to: 0
  1691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1692  0008CC  9366               	bcf	_flags& (0+255),1,b
  1693  0008CE                     l1356:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1697  0008CE  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1698  0008D0  EF74  F004         	goto	u910
  1699  0008D4  5165               	movf	(_prec+1)& (0+255),w,b
  1700  0008D6  E106               	bnz	u911
  1701  0008D8  0564               	decf	_prec& (0+255),w,b
  1702  0008DA  B0D8               	btfsc	status,0,c
  1703  0008DC  EF72  F004         	goto	u911
  1704  0008E0  EF74  F004         	goto	u910
  1705  0008E4                     u911:
  1706  0008E4  EF7A  F004         	goto	l749
  1707  0008E8                     u910:
  1708  0008E8                     
  1709                           ; BSR set to: 0
  1710  0008E8  0E00               	movlw	0
  1711  0008EA  6E31               	movwf	(dtoa@p+1)^0,c
  1712  0008EC  0E01               	movlw	1
  1713  0008EE  6E30               	movwf	dtoa@p^0,c
  1714  0008F0  EF7E  F004         	goto	l751
  1715  0008F4                     l749:
  1716                           
  1717                           ; BSR set to: 0
  1718  0008F4  C064  F030         	movff	_prec,dtoa@p
  1719  0008F8  C065  F031         	movff	_prec+1,dtoa@p+1
  1720  0008FC                     l751:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1724  0008FC  C062  F032         	movff	_width,dtoa@w
  1725  000900  C063  F033         	movff	_width+1,dtoa@w+1
  1726  000904                     
  1727                           ; BSR set to: 0
  1728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1729  000904  5034               	movf	dtoa@s^0,w,c
  1730  000906  1035               	iorwf	(dtoa@s+1)^0,w,c
  1731  000908  A4D8               	btfss	status,2,c
  1732  00090A  EF89  F004         	goto	u921
  1733  00090E  EF8B  F004         	goto	u920
  1734  000912                     u921:
  1735  000912  EF92  F004         	goto	l1364
  1736  000916                     u920:
  1737  000916                     
  1738                           ; BSR set to: 0
  1739  000916  A566               	btfss	_flags& (0+255),2,b
  1740  000918  EF90  F004         	goto	u931
  1741  00091C  EF92  F004         	goto	u930
  1742  000920                     u931:
  1743  000920  EF95  F004         	goto	l1366
  1744  000924                     u930:
  1745  000924                     l1364:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  1749  000924  0632               	decf	dtoa@w^0,f,c
  1750  000926  A0D8               	btfss	status,0,c
  1751  000928  0633               	decf	(dtoa@w+1)^0,f,c
  1752  00092A                     l1366:
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1756  00092A  0E00               	movlw	0
  1757  00092C  6E3F               	movwf	(dtoa@i+1)^0,c
  1758  00092E  0E1F               	movlw	31
  1759  000930  6E3E               	movwf	dtoa@i^0,c
  1760  000932                     
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1763  000932  0E00               	movlw	0
  1764  000934  6F87               	movwf	(_dbuf+31)& (0+255),b
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1767  000936  EF19  F005         	goto	l1380
  1768  00093A                     l1370:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  1771  00093A  063E               	decf	dtoa@i^0,f,c
  1772  00093C  A0D8               	btfss	status,0,c
  1773  00093E  063F               	decf	(dtoa@i+1)^0,f,c
  1774  000940                     
  1775                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1776  000940  0E68               	movlw	low _dbuf
  1777  000942  243E               	addwf	dtoa@i^0,w,c
  1778  000944  6ED9               	movwf	fsr2l,c
  1779  000946  0E00               	movlw	high _dbuf
  1780  000948  203F               	addwfc	(dtoa@i+1)^0,w,c
  1781  00094A  6EDA               	movwf	fsr2h,c
  1782  00094C  C036  F001         	movff	dtoa@n,___aomod@dividend
  1783  000950  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1784  000954  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1785  000958  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1786  00095C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1787  000960  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1788  000964  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1789  000968  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1790  00096C  0E0A               	movlw	10
  1791  00096E  6E09               	movwf	___aomod@divisor^0,c
  1792  000970  0E00               	movlw	0
  1793  000972  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1794  000974  0E00               	movlw	0
  1795  000976  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1796  000978  0E00               	movlw	0
  1797  00097A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1798  00097C  0E00               	movlw	0
  1799  00097E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1800  000980  0E00               	movlw	0
  1801  000982  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1802  000984  0E00               	movlw	0
  1803  000986  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1804  000988  0E00               	movlw	0
  1805  00098A  6E10               	movwf	(___aomod@divisor+7)^0,c
  1806  00098C  EC71  F008         	call	___aomod	;wreg free
  1807  000990  C001  F026         	movff	?___aomod,??_dtoa
  1808  000994  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1809  000998  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1810  00099C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1811  0009A0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1812  0009A4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1813  0009A8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1814  0009AC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1815  0009B0  C026  F013         	movff	??_dtoa,abs@a
  1816  0009B4  C028  F014         	movff	??_dtoa+2,abs@a+1
  1817  0009B8  ECC2  F00A         	call	_abs	;wreg free
  1818  0009BC  5013               	movf	?_abs^0,w,c
  1819  0009BE  0F30               	addlw	48
  1820  0009C0  6EDF               	movwf	indf2,c
  1821  0009C2                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  1823  0009C2  0630               	decf	dtoa@p^0,f,c
  1824  0009C4  A0D8               	btfss	status,0,c
  1825  0009C6  0631               	decf	(dtoa@p+1)^0,f,c
  1826  0009C8                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  1828  0009C8  0632               	decf	dtoa@w^0,f,c
  1829  0009CA  A0D8               	btfss	status,0,c
  1830  0009CC  0633               	decf	(dtoa@w+1)^0,f,c
  1831  0009CE                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1833  0009CE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1834  0009D2  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1835  0009D6  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1836  0009DA  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1837  0009DE  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1838  0009E2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1839  0009E6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1840  0009EA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1841  0009EE  0E0A               	movlw	10
  1842  0009F0  6E09               	movwf	___aodiv@divisor^0,c
  1843  0009F2  0E00               	movlw	0
  1844  0009F4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1845  0009F6  0E00               	movlw	0
  1846  0009F8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1847  0009FA  0E00               	movlw	0
  1848  0009FC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1849  0009FE  0E00               	movlw	0
  1850  000A00  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1851  000A02  0E00               	movlw	0
  1852  000A04  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1853  000A06  0E00               	movlw	0
  1854  000A08  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1855  000A0A  0E00               	movlw	0
  1856  000A0C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1857  000A0E  ECEA  F006         	call	___aodiv	;wreg free
  1858  000A12  C001  F036         	movff	?___aodiv,dtoa@n
  1859  000A16  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1860  000A1A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1861  000A1E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1862  000A22  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1863  000A26  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1864  000A2A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1865  000A2E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1866  000A32                     l1380:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1869  000A32  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1870  000A34  EF24  F005         	goto	u941
  1871  000A38  503F               	movf	(dtoa@i+1)^0,w,c
  1872  000A3A  E108               	bnz	u940
  1873  000A3C  043E               	decf	dtoa@i^0,w,c
  1874  000A3E  A0D8               	btfss	status,0,c
  1875  000A40  EF24  F005         	goto	u941
  1876  000A44  EF26  F005         	goto	u940
  1877  000A48                     u941:
  1878  000A48  EF57  F005         	goto	l1390
  1879  000A4C                     u940:
  1880  000A4C  5036               	movf	dtoa@n^0,w,c
  1881  000A4E  1037               	iorwf	(dtoa@n+1)^0,w,c
  1882  000A50  1038               	iorwf	(dtoa@n+2)^0,w,c
  1883  000A52  1039               	iorwf	(dtoa@n+3)^0,w,c
  1884  000A54  103A               	iorwf	(dtoa@n+4)^0,w,c
  1885  000A56  103B               	iorwf	(dtoa@n+5)^0,w,c
  1886  000A58  103C               	iorwf	(dtoa@n+6)^0,w,c
  1887  000A5A  103D               	iorwf	(dtoa@n+7)^0,w,c
  1888  000A5C  A4D8               	btfss	status,2,c
  1889  000A5E  EF33  F005         	goto	u951
  1890  000A62  EF35  F005         	goto	u950
  1891  000A66                     u951:
  1892  000A66  EF9D  F004         	goto	l1370
  1893  000A6A                     u950:
  1894  000A6A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1895  000A6C  EF42  F005         	goto	u960
  1896  000A70  5031               	movf	(dtoa@p+1)^0,w,c
  1897  000A72  E106               	bnz	u961
  1898  000A74  0430               	decf	dtoa@p^0,w,c
  1899  000A76  B0D8               	btfsc	status,0,c
  1900  000A78  EF40  F005         	goto	u961
  1901  000A7C  EF42  F005         	goto	u960
  1902  000A80                     u961:
  1903  000A80  EF9D  F004         	goto	l1370
  1904  000A84                     u960:
  1905  000A84  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1906  000A86  EF4D  F005         	goto	u971
  1907  000A8A  5033               	movf	(dtoa@w+1)^0,w,c
  1908  000A8C  E108               	bnz	u970
  1909  000A8E  0432               	decf	dtoa@w^0,w,c
  1910  000A90  A0D8               	btfss	status,0,c
  1911  000A92  EF4D  F005         	goto	u971
  1912  000A96  EF4F  F005         	goto	u970
  1913  000A9A                     u971:
  1914  000A9A  EF57  F005         	goto	l1390
  1915  000A9E                     u970:
  1916  000A9E  0100               	movlb	0	; () banked
  1917  000AA0  B366               	btfsc	_flags& (0+255),1,b
  1918  000AA2  EF55  F005         	goto	u981
  1919  000AA6  EF57  F005         	goto	u980
  1920  000AAA                     u981:
  1921  000AAA  EF9D  F004         	goto	l1370
  1922  000AAE                     u980:
  1923  000AAE                     l1390:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1926  000AAE  5034               	movf	dtoa@s^0,w,c
  1927  000AB0  1035               	iorwf	(dtoa@s+1)^0,w,c
  1928  000AB2  A4D8               	btfss	status,2,c
  1929  000AB4  EF5E  F005         	goto	u991
  1930  000AB8  EF60  F005         	goto	u990
  1931  000ABC                     u991:
  1932  000ABC  EF68  F005         	goto	l1394
  1933  000AC0                     u990:
  1934  000AC0  0100               	movlb	0	; () banked
  1935  000AC2  A566               	btfss	_flags& (0+255),2,b
  1936  000AC4  EF66  F005         	goto	u1001
  1937  000AC8  EF68  F005         	goto	u1000
  1938  000ACC                     u1001:
  1939  000ACC  EF86  F005         	goto	l1404
  1940  000AD0                     u1000:
  1941  000AD0                     l1394:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  1944  000AD0  063E               	decf	dtoa@i^0,f,c
  1945  000AD2  A0D8               	btfss	status,0,c
  1946  000AD4  063F               	decf	(dtoa@i+1)^0,f,c
  1947  000AD6                     
  1948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1949  000AD6  5034               	movf	dtoa@s^0,w,c
  1950  000AD8  1035               	iorwf	(dtoa@s+1)^0,w,c
  1951  000ADA  A4D8               	btfss	status,2,c
  1952  000ADC  EF72  F005         	goto	u1011
  1953  000AE0  EF74  F005         	goto	u1010
  1954  000AE4                     u1011:
  1955  000AE4  EF7A  F005         	goto	l1400
  1956  000AE8                     u1010:
  1957  000AE8  0E00               	movlw	0
  1958  000AEA  6E2F               	movwf	(_dtoa$578+1)^0,c
  1959  000AEC  0E2B               	movlw	43
  1960  000AEE  6E2E               	movwf	_dtoa$578^0,c
  1961  000AF0  EF7E  F005         	goto	l1402
  1962  000AF4                     l1400:
  1963  000AF4  0E00               	movlw	0
  1964  000AF6  6E2F               	movwf	(_dtoa$578+1)^0,c
  1965  000AF8  0E2D               	movlw	45
  1966  000AFA  6E2E               	movwf	_dtoa$578^0,c
  1967  000AFC                     l1402:
  1968  000AFC  0E68               	movlw	low _dbuf
  1969  000AFE  243E               	addwf	dtoa@i^0,w,c
  1970  000B00  6ED9               	movwf	fsr2l,c
  1971  000B02  0E00               	movlw	high _dbuf
  1972  000B04  203F               	addwfc	(dtoa@i+1)^0,w,c
  1973  000B06  6EDA               	movwf	fsr2h,c
  1974  000B08  C02E  FFDF         	movff	_dtoa$578,indf2
  1975  000B0C                     l1404:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1978  000B0C  C01C  F011         	movff	dtoa@fp,pad@fp
  1979  000B10  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1980  000B14  0E68               	movlw	low _dbuf
  1981  000B16  243E               	addwf	dtoa@i^0,w,c
  1982  000B18  6E13               	movwf	pad@buf^0,c
  1983  000B1A  0E00               	movlw	high _dbuf
  1984  000B1C  203F               	addwfc	(dtoa@i+1)^0,w,c
  1985  000B1E  6E14               	movwf	(pad@buf+1)^0,c
  1986  000B20  C032  F015         	movff	dtoa@w,pad@p
  1987  000B24  C033  F016         	movff	dtoa@w+1,pad@p+1
  1988  000B28  EC92  F009         	call	_pad	;wreg free
  1989  000B2C  C011  F01C         	movff	?_pad,?_dtoa
  1990  000B30  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1991  000B34  0012               	return		;funcret
  1992  000B36                     __end_of_dtoa:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _pad *****************
  1996 ;; Defined at:
  1997 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2000 ;;		 -> NULL(0), 
  2001 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2002 ;;		 -> dbuf(32), 
  2003 ;;  p               2   20[COMRAM] int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  w               2   25[COMRAM] int 
  2006 ;;  i               2   23[COMRAM] int 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2   16[COMRAM] int 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2016 ;;      Params:         6       0       0       0       0       0       0       0       0
  2017 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2018 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2019 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2020 ;;Total ram usage:       11 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 3
  2023 ;; This function calls:
  2024 ;;		_fputc
  2025 ;;		_fputs
  2026 ;;		_strlen
  2027 ;; This function is called by:
  2028 ;;		_dtoa
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text7
  2033  001324                     __ptext7:
  2034                           	callstack 0
  2035  001324                     _pad:
  2036                           	callstack 23
  2037  001324                     
  2038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2039  001324  0100               	movlb	0	; () banked
  2040  001326  A166               	btfss	_flags& (0+255),0,b
  2041  001328  EF98  F009         	goto	u821
  2042  00132C  EF9A  F009         	goto	u820
  2043  001330                     u821:
  2044  001330  EFA4  F009         	goto	l1324
  2045  001334                     u820:
  2046  001334                     
  2047                           ; BSR set to: 0
  2048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2049  001334  C013  F00A         	movff	pad@buf,fputs@s
  2050  001338  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2051  00133C  C011  F00C         	movff	pad@fp,fputs@fp
  2052  001340  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2053  001344  ECA0  F00A         	call	_fputs	;wreg free
  2054  001348                     l1324:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2057  001348  BE16               	btfsc	(pad@p+1)^0,7,c
  2058  00134A  EFA9  F009         	goto	u831
  2059  00134E  EFAB  F009         	goto	u830
  2060  001352                     u831:
  2061  001352  EFB1  F009         	goto	l1328
  2062  001356                     u830:
  2063  001356  C015  F01A         	movff	pad@p,pad@w
  2064  00135A  C016  F01B         	movff	pad@p+1,pad@w+1
  2065  00135E  EFB5  F009         	goto	l738
  2066  001362                     l1328:
  2067  001362  0E00               	movlw	0
  2068  001364  6E1B               	movwf	(pad@w+1)^0,c
  2069  001366  0E00               	movlw	0
  2070  001368  6E1A               	movwf	pad@w^0,c
  2071  00136A                     l738:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2074  00136A  0E00               	movlw	0
  2075  00136C  6E19               	movwf	(pad@i+1)^0,c
  2076  00136E  0E00               	movlw	0
  2077  001370  6E18               	movwf	pad@i^0,c
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2080  001372  EFC7  F009         	goto	l1334
  2081  001376                     l1330:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2084  001376  0E00               	movlw	0
  2085  001378  6E02               	movwf	(fputc@c+1)^0,c
  2086  00137A  0E20               	movlw	32
  2087  00137C  6E01               	movwf	fputc@c^0,c
  2088  00137E  C011  F003         	movff	pad@fp,fputc@fp
  2089  001382  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2090  001386  ECF5  F009         	call	_fputc	;wreg free
  2091  00138A                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2093  00138A  4A18               	infsnz	pad@i^0,f,c
  2094  00138C  2A19               	incf	(pad@i+1)^0,f,c
  2095  00138E                     l1334:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2098  00138E  501A               	movf	pad@w^0,w,c
  2099  001390  5C18               	subwf	pad@i^0,w,c
  2100  001392  5019               	movf	(pad@i+1)^0,w,c
  2101  001394  0A80               	xorlw	128
  2102  001396  6E17               	movwf	??_pad^0,c
  2103  001398  501B               	movf	(pad@w+1)^0,w,c
  2104  00139A  0A80               	xorlw	128
  2105  00139C  5817               	subwfb	??_pad^0,w,c
  2106  00139E  A0D8               	btfss	status,0,c
  2107  0013A0  EFD4  F009         	goto	u841
  2108  0013A4  EFD6  F009         	goto	u840
  2109  0013A8                     u841:
  2110  0013A8  EFBB  F009         	goto	l1330
  2111  0013AC                     u840:
  2112  0013AC                     
  2113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2114  0013AC  0100               	movlb	0	; () banked
  2115  0013AE  B166               	btfsc	_flags& (0+255),0,b
  2116  0013B0  EFDC  F009         	goto	u851
  2117  0013B4  EFDE  F009         	goto	u850
  2118  0013B8                     u851:
  2119  0013B8  EFE8  F009         	goto	l1338
  2120  0013BC                     u850:
  2121  0013BC                     
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2124  0013BC  C013  F00A         	movff	pad@buf,fputs@s
  2125  0013C0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2126  0013C4  C011  F00C         	movff	pad@fp,fputs@fp
  2127  0013C8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2128  0013CC  ECA0  F00A         	call	_fputs	;wreg free
  2129  0013D0                     l1338:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2132  0013D0  C013  F001         	movff	pad@buf,strlen@s
  2133  0013D4  C014  F002         	movff	pad@buf+1,strlen@s+1
  2134  0013D8  ECFF  F00A         	call	_strlen	;wreg free
  2135  0013DC  501A               	movf	pad@w^0,w,c
  2136  0013DE  2401               	addwf	?_strlen^0,w,c
  2137  0013E0  6E11               	movwf	?_pad^0,c
  2138  0013E2  501B               	movf	(pad@w+1)^0,w,c
  2139  0013E4  2002               	addwfc	(?_strlen+1)^0,w,c
  2140  0013E6  6E12               	movwf	(?_pad+1)^0,c
  2141  0013E8  0012               	return		;funcret
  2142  0013EA                     __end_of_pad:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _strlen *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2150 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@perro(14), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2153 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@perro(14), 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2    0[COMRAM] unsigned int 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2163 ;;      Params:         2       0       0       0       0       0       0       0       0
  2164 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2166 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2167 ;;Total ram usage:        4 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_pad
  2173 ;;		_stoa
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text8
  2178  0015FE                     __ptext8:
  2179                           	callstack 0
  2180  0015FE                     _strlen:
  2181                           	callstack 26
  2182  0015FE  C001  F003         	movff	strlen@s,strlen@a
  2183  001602  C002  F004         	movff	strlen@s+1,strlen@a+1
  2184  001606  EF07  F00B         	goto	l1234
  2185  00160A                     l1232:
  2186  00160A  4A01               	infsnz	strlen@s^0,f,c
  2187  00160C  2A02               	incf	(strlen@s+1)^0,f,c
  2188  00160E                     l1234:
  2189  00160E  C001  FFD9         	movff	strlen@s,fsr2l
  2190  001612  C002  FFDA         	movff	strlen@s+1,fsr2h
  2191  001616  50DF               	movf	indf2,w,c
  2192  001618  A4D8               	btfss	status,2,c
  2193  00161A  EF11  F00B         	goto	u681
  2194  00161E  EF13  F00B         	goto	u680
  2195  001622                     u681:
  2196  001622  EF05  F00B         	goto	l1232
  2197  001626                     u680:
  2198  001626  5003               	movf	strlen@a^0,w,c
  2199  001628  5C01               	subwf	strlen@s^0,w,c
  2200  00162A  6E01               	movwf	?_strlen^0,c
  2201  00162C  5004               	movf	(strlen@a+1)^0,w,c
  2202  00162E  5802               	subwfb	(strlen@s+1)^0,w,c
  2203  001630  6E02               	movwf	(?_strlen+1)^0,c
  2204  001632  0012               	return		;funcret
  2205  001634                     __end_of_strlen:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _fputs *****************
  2209 ;; Defined at:
  2210 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2213 ;;		 -> dbuf(32), 
  2214 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2215 ;;		 -> NULL(0), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  i               2   14[COMRAM] int 
  2218 ;;  c               1   13[COMRAM] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  2    9[COMRAM] int 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2228 ;;      Params:         4       0       0       0       0       0       0       0       0
  2229 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2231 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2232 ;;Total ram usage:        7 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 2
  2235 ;; This function calls:
  2236 ;;		_fputc
  2237 ;; This function is called by:
  2238 ;;		_pad
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text9
  2243  001540                     __ptext9:
  2244                           	callstack 0
  2245  001540                     _fputs:
  2246                           	callstack 23
  2247  001540  0E00               	movlw	0
  2248  001542  6E10               	movwf	(fputs@i+1)^0,c
  2249  001544  0E00               	movlw	0
  2250  001546  6E0F               	movwf	fputs@i^0,c
  2251  001548  EFB1  F00A         	goto	l1228
  2252  00154C                     l1224:
  2253  00154C  C00E  F001         	movff	fputs@c,fputc@c
  2254  001550  6A02               	clrf	(fputc@c+1)^0,c
  2255  001552  C00C  F003         	movff	fputs@fp,fputc@fp
  2256  001556  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2257  00155A  ECF5  F009         	call	_fputc	;wreg free
  2258  00155E  4A0F               	infsnz	fputs@i^0,f,c
  2259  001560  2A10               	incf	(fputs@i+1)^0,f,c
  2260  001562                     l1228:
  2261  001562  500F               	movf	fputs@i^0,w,c
  2262  001564  240A               	addwf	fputs@s^0,w,c
  2263  001566  6ED9               	movwf	fsr2l,c
  2264  001568  5010               	movf	(fputs@i+1)^0,w,c
  2265  00156A  200B               	addwfc	(fputs@s+1)^0,w,c
  2266  00156C  6EDA               	movwf	fsr2h,c
  2267  00156E  50DF               	movf	indf2,w,c
  2268  001570  6E0E               	movwf	fputs@c^0,c
  2269  001572  500E               	movf	fputs@c^0,w,c
  2270  001574  A4D8               	btfss	status,2,c
  2271  001576  EFBF  F00A         	goto	u671
  2272  00157A  EFC1  F00A         	goto	u670
  2273  00157E                     u671:
  2274  00157E  EFA6  F00A         	goto	l1224
  2275  001582                     u670:
  2276  001582  0012               	return		;funcret
  2277  001584                     __end_of_fputs:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _fputc *****************
  2281 ;; Defined at:
  2282 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  c               2    0[COMRAM] int 
  2285 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2286 ;;		 -> NULL(0), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2    0[COMRAM] int 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2298 ;;      Params:         4       0       0       0       0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2300 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2301 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2302 ;;Total ram usage:        9 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 1
  2305 ;; This function calls:
  2306 ;;		_putch
  2307 ;; This function is called by:
  2308 ;;		_pad
  2309 ;;		_stoa
  2310 ;;		_vfpfcnvrt
  2311 ;;		_fputs
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text10
  2316  0013EA                     __ptext10:
  2317                           	callstack 0
  2318  0013EA                     _fputc:
  2319                           	callstack 25
  2320  0013EA  5003               	movf	fputc@fp^0,w,c
  2321  0013EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2322  0013EE  B4D8               	btfsc	status,2,c
  2323  0013F0  EFFC  F009         	goto	u631
  2324  0013F4  EFFE  F009         	goto	u630
  2325  0013F8                     u631:
  2326  0013F8  EF07  F00A         	goto	l1212
  2327  0013FC                     u630:
  2328  0013FC  5003               	movf	fputc@fp^0,w,c
  2329  0013FE  1004               	iorwf	(fputc@fp+1)^0,w,c
  2330  001400  A4D8               	btfss	status,2,c
  2331  001402  EF05  F00A         	goto	u641
  2332  001406  EF07  F00A         	goto	u640
  2333  00140A                     u641:
  2334  00140A  EF0C  F00A         	goto	l1214
  2335  00140E                     u640:
  2336  00140E                     l1212:
  2337  00140E  5001               	movf	fputc@c^0,w,c
  2338  001410  EC39  F00B         	call	_putch
  2339  001414  EF3F  F00A         	goto	l832
  2340  001418                     l1214:
  2341  001418  EE20 F009          	lfsr	2,9
  2342  00141C  5003               	movf	fputc@fp^0,w,c
  2343  00141E  26D9               	addwf	fsr2l,f,c
  2344  001420  5004               	movf	(fputc@fp+1)^0,w,c
  2345  001422  22DA               	addwfc	fsr2h,f,c
  2346  001424  50DE               	movf	postinc2,w,c
  2347  001426  10DE               	iorwf	postinc2,w,c
  2348  001428  B4D8               	btfsc	status,2,c
  2349  00142A  EF19  F00A         	goto	u651
  2350  00142E  EF1B  F00A         	goto	u650
  2351  001432                     u651:
  2352  001432  EF36  F00A         	goto	l1218
  2353  001436                     u650:
  2354  001436  EE20 F009          	lfsr	2,9
  2355  00143A  5003               	movf	fputc@fp^0,w,c
  2356  00143C  26D9               	addwf	fsr2l,f,c
  2357  00143E  5004               	movf	(fputc@fp+1)^0,w,c
  2358  001440  22DA               	addwfc	fsr2h,f,c
  2359  001442  EE10 F003          	lfsr	1,3
  2360  001446  5003               	movf	fputc@fp^0,w,c
  2361  001448  26E1               	addwf	fsr1l,f,c
  2362  00144A  5004               	movf	(fputc@fp+1)^0,w,c
  2363  00144C  22E2               	addwfc	fsr1h,f,c
  2364  00144E  50DE               	movf	postinc2,w,c
  2365  001450  5CE6               	subwf	postinc1,w,c
  2366  001452  50E6               	movf	postinc1,w,c
  2367  001454  0A80               	xorlw	128
  2368  001456  6E09               	movwf	(??_fputc+4)^0,c
  2369  001458  50DE               	movf	postinc2,w,c
  2370  00145A  0A80               	xorlw	128
  2371  00145C  5809               	subwfb	(??_fputc+4)^0,w,c
  2372  00145E  B0D8               	btfsc	status,0,c
  2373  001460  EF34  F00A         	goto	u661
  2374  001464  EF36  F00A         	goto	u660
  2375  001468                     u661:
  2376  001468  EF3F  F00A         	goto	l832
  2377  00146C                     u660:
  2378  00146C                     l1218:
  2379  00146C  EE20 F003          	lfsr	2,3
  2380  001470  5003               	movf	fputc@fp^0,w,c
  2381  001472  26D9               	addwf	fsr2l,f,c
  2382  001474  5004               	movf	(fputc@fp+1)^0,w,c
  2383  001476  22DA               	addwfc	fsr2h,f,c
  2384  001478  2ADE               	incf	postinc2,f,c
  2385  00147A  0E00               	movlw	0
  2386  00147C  22DD               	addwfc	postdec2,f,c
  2387  00147E                     l832:
  2388  00147E  0012               	return		;funcret
  2389  001480                     __end_of_fputc:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _putch *****************
  2393 ;; Defined at:
  2394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  c               1    wreg     unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  c               1    0[COMRAM] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_fputc
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text11
  2422  001672                     __ptext11:
  2423                           	callstack 0
  2424  001672                     _putch:
  2425                           	callstack 25
  2426  001672  0012               	return		;funcret
  2427  001674                     __end_of_putch:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _abs *****************
  2431 ;; Defined at:
  2432 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  a               2   18[COMRAM] int 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2   18[COMRAM] int 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2446 ;;      Params:         2       0       0       0       0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2448 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2449 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2450 ;;Total ram usage:        4 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_dtoa
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text12
  2460  001584                     __ptext12:
  2461                           	callstack 0
  2462  001584                     _abs:
  2463                           	callstack 26
  2464  001584  BE14               	btfsc	(abs@a+1)^0,7,c
  2465  001586  EFCF  F00A         	goto	u860
  2466  00158A  5014               	movf	(abs@a+1)^0,w,c
  2467  00158C  E106               	bnz	u861
  2468  00158E  0413               	decf	abs@a^0,w,c
  2469  001590  B0D8               	btfsc	status,0,c
  2470  001592  EFCD  F00A         	goto	u861
  2471  001596  EFCF  F00A         	goto	u860
  2472  00159A                     u861:
  2473  00159A  EFDD  F00A         	goto	l817
  2474  00159E                     u860:
  2475  00159E  C013  F015         	movff	abs@a,??_abs
  2476  0015A2  C014  F016         	movff	abs@a+1,??_abs+1
  2477  0015A6  1E15               	comf	??_abs^0,f,c
  2478  0015A8  1E16               	comf	(??_abs+1)^0,f,c
  2479  0015AA  4A15               	infsnz	??_abs^0,f,c
  2480  0015AC  2A16               	incf	(??_abs+1)^0,f,c
  2481  0015AE  C015  F013         	movff	??_abs,?_abs
  2482  0015B2  C016  F014         	movff	??_abs+1,?_abs+1
  2483  0015B6  EFE1  F00A         	goto	l820
  2484  0015BA                     l817:
  2485  0015BA  C013  F013         	movff	abs@a,?_abs
  2486  0015BE  C014  F014         	movff	abs@a+1,?_abs+1
  2487  0015C2                     l820:
  2488  0015C2  0012               	return		;funcret
  2489  0015C4                     __end_of_abs:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function ___aomod *****************
  2493 ;; Defined at:
  2494 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  dividend        8    0[COMRAM] long long 
  2497 ;;  divisor         8    8[COMRAM] long long 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  sign            1   17[COMRAM] unsigned char 
  2500 ;;  counter         1   16[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  8    0[COMRAM] long long 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2510 ;;      Params:        16       0       0       0       0       0       0       0       0
  2511 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2513 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2514 ;;Total ram usage:       18 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_dtoa
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text13
  2524  0010E2                     __ptext13:
  2525                           	callstack 0
  2526  0010E2                     ___aomod:
  2527                           	callstack 26
  2528  0010E2  0E00               	movlw	0
  2529  0010E4  6E12               	movwf	___aomod@sign^0,c
  2530  0010E6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2531  0010E8  EF7A  F008         	goto	u760
  2532  0010EC  EF78  F008         	goto	u761
  2533  0010F0                     u761:
  2534  0010F0  EF8C  F008         	goto	l1292
  2535  0010F4                     u760:
  2536  0010F4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2537  0010F6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2538  0010F8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2539  0010FA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2540  0010FC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2541  0010FE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2542  001100  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2543  001102  6C01               	negf	___aomod@dividend^0,c
  2544  001104  0E00               	movlw	0
  2545  001106  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2546  001108  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2547  00110A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2548  00110C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2549  00110E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2550  001110  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2551  001112  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2552  001114  0E01               	movlw	1
  2553  001116  6E12               	movwf	___aomod@sign^0,c
  2554  001118                     l1292:
  2555  001118  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2556  00111A  EF93  F008         	goto	u770
  2557  00111E  EF91  F008         	goto	u771
  2558  001122                     u771:
  2559  001122  EFA3  F008         	goto	l1296
  2560  001126                     u770:
  2561  001126  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2562  001128  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2563  00112A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2564  00112C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2565  00112E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2566  001130  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2567  001132  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2568  001134  6C09               	negf	___aomod@divisor^0,c
  2569  001136  0E00               	movlw	0
  2570  001138  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2571  00113A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2572  00113C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2573  00113E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2574  001140  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2575  001142  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2576  001144  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2577  001146                     l1296:
  2578  001146  5009               	movf	___aomod@divisor^0,w,c
  2579  001148  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2580  00114A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2581  00114C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2582  00114E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2583  001150  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2584  001152  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2585  001154  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2586  001156  B4D8               	btfsc	status,2,c
  2587  001158  EFB0  F008         	goto	u781
  2588  00115C  EFB2  F008         	goto	u780
  2589  001160                     u781:
  2590  001160  EFFA  F008         	goto	l1312
  2591  001164                     u780:
  2592  001164  0E01               	movlw	1
  2593  001166  6E11               	movwf	___aomod@counter^0,c
  2594  001168  EFC0  F008         	goto	l1302
  2595  00116C                     l1300:
  2596  00116C  90D8               	bcf	status,0,c
  2597  00116E  3609               	rlcf	___aomod@divisor^0,f,c
  2598  001170  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2599  001172  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2600  001174  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2601  001176  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2602  001178  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2603  00117A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2604  00117C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2605  00117E  2A11               	incf	___aomod@counter^0,f,c
  2606  001180                     l1302:
  2607  001180  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2608  001182  EFC5  F008         	goto	u791
  2609  001186  EFC7  F008         	goto	u790
  2610  00118A                     u791:
  2611  00118A  EFB6  F008         	goto	l1300
  2612  00118E                     u790:
  2613  00118E                     l1304:
  2614  00118E  5009               	movf	___aomod@divisor^0,w,c
  2615  001190  5C01               	subwf	___aomod@dividend^0,w,c
  2616  001192  500A               	movf	(___aomod@divisor+1)^0,w,c
  2617  001194  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2618  001196  500B               	movf	(___aomod@divisor+2)^0,w,c
  2619  001198  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2620  00119A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2621  00119C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2622  00119E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2623  0011A0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2624  0011A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2625  0011A4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2626  0011A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2627  0011A8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2628  0011AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2629  0011AC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2630  0011AE  A0D8               	btfss	status,0,c
  2631  0011B0  EFDC  F008         	goto	u801
  2632  0011B4  EFDE  F008         	goto	u800
  2633  0011B8                     u801:
  2634  0011B8  EFEE  F008         	goto	l1308
  2635  0011BC                     u800:
  2636  0011BC  5009               	movf	___aomod@divisor^0,w,c
  2637  0011BE  5E01               	subwf	___aomod@dividend^0,f,c
  2638  0011C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  2639  0011C2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2640  0011C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  2641  0011C6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2642  0011C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  2643  0011CA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2644  0011CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  2645  0011CE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2646  0011D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  2647  0011D2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2648  0011D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  2649  0011D6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2650  0011D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  2651  0011DA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2652  0011DC                     l1308:
  2653  0011DC  90D8               	bcf	status,0,c
  2654  0011DE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2655  0011E0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2656  0011E2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2657  0011E4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2658  0011E6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2659  0011E8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2660  0011EA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2661  0011EC  3209               	rrcf	___aomod@divisor^0,f,c
  2662  0011EE  2E11               	decfsz	___aomod@counter^0,f,c
  2663  0011F0  EFC7  F008         	goto	l1304
  2664  0011F4                     l1312:
  2665  0011F4  5012               	movf	___aomod@sign^0,w,c
  2666  0011F6  B4D8               	btfsc	status,2,c
  2667  0011F8  EF00  F009         	goto	u811
  2668  0011FC  EF02  F009         	goto	u810
  2669  001200                     u811:
  2670  001200  EF12  F009         	goto	l1316
  2671  001204                     u810:
  2672  001204  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2673  001206  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2674  001208  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2675  00120A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2676  00120C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2677  00120E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2678  001210  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2679  001212  6C01               	negf	___aomod@dividend^0,c
  2680  001214  0E00               	movlw	0
  2681  001216  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2682  001218  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2683  00121A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2684  00121C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2685  00121E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2686  001220  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2687  001222  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2688  001224                     l1316:
  2689  001224  C001  F001         	movff	___aomod@dividend,?___aomod
  2690  001228  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2691  00122C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2692  001230  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2693  001234  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2694  001238  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2695  00123C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2696  001240  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2697  001244  0012               	return		;funcret
  2698  001246                     __end_of___aomod:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function ___aodiv *****************
  2702 ;; Defined at:
  2703 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  dividend        8    0[COMRAM] long long 
  2706 ;;  divisor         8    8[COMRAM] long long 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  quotient        8   18[COMRAM] long long 
  2709 ;;  sign            1   17[COMRAM] unsigned char 
  2710 ;;  counter         1   16[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  8    0[COMRAM] long long 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2720 ;;      Params:        16       0       0       0       0       0       0       0       0
  2721 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2723 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2724 ;;Total ram usage:       26 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_dtoa
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text14
  2734  000DD4                     __ptext14:
  2735                           	callstack 0
  2736  000DD4                     ___aodiv:
  2737                           	callstack 26
  2738  000DD4  0E00               	movlw	0
  2739  000DD6  6E12               	movwf	___aodiv@sign^0,c
  2740  000DD8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2741  000DDA  EFF3  F006         	goto	u690
  2742  000DDE  EFF1  F006         	goto	u691
  2743  000DE2                     u691:
  2744  000DE2  EF05  F007         	goto	l1248
  2745  000DE6                     u690:
  2746  000DE6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2747  000DE8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2748  000DEA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2749  000DEC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2750  000DEE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2751  000DF0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2752  000DF2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2753  000DF4  6C09               	negf	___aodiv@divisor^0,c
  2754  000DF6  0E00               	movlw	0
  2755  000DF8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2756  000DFA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2757  000DFC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2758  000DFE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2759  000E00  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2760  000E02  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2761  000E04  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2762  000E06  0E01               	movlw	1
  2763  000E08  6E12               	movwf	___aodiv@sign^0,c
  2764  000E0A                     l1248:
  2765  000E0A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2766  000E0C  EF0C  F007         	goto	u700
  2767  000E10  EF0A  F007         	goto	u701
  2768  000E14                     u701:
  2769  000E14  EF1E  F007         	goto	l1254
  2770  000E18                     u700:
  2771  000E18  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2772  000E1A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2773  000E1C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2774  000E1E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2775  000E20  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2776  000E22  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2777  000E24  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2778  000E26  6C01               	negf	___aodiv@dividend^0,c
  2779  000E28  0E00               	movlw	0
  2780  000E2A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2781  000E2C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2782  000E2E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2783  000E30  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2784  000E32  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2785  000E34  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2786  000E36  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2787  000E38  0E01               	movlw	1
  2788  000E3A  1A12               	xorwf	___aodiv@sign^0,f,c
  2789  000E3C                     l1254:
  2790  000E3C  EE20  F013         	lfsr	2,___aodiv@quotient
  2791  000E40  0E07               	movlw	7
  2792  000E42                     u711:
  2793  000E42  6ADE               	clrf	postinc2,c
  2794  000E44  06E8               	decf	wreg,f,c
  2795  000E46  E2FD               	bc	u711
  2796  000E48  5009               	movf	___aodiv@divisor^0,w,c
  2797  000E4A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2798  000E4C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2799  000E4E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2800  000E50  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2801  000E52  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2802  000E54  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2803  000E56  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2804  000E58  B4D8               	btfsc	status,2,c
  2805  000E5A  EF31  F007         	goto	u721
  2806  000E5E  EF33  F007         	goto	u720
  2807  000E62                     u721:
  2808  000E62  EF85  F007         	goto	l1276
  2809  000E66                     u720:
  2810  000E66  0E01               	movlw	1
  2811  000E68  6E11               	movwf	___aodiv@counter^0,c
  2812  000E6A  EF41  F007         	goto	l1262
  2813  000E6E                     l1260:
  2814  000E6E  90D8               	bcf	status,0,c
  2815  000E70  3609               	rlcf	___aodiv@divisor^0,f,c
  2816  000E72  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2817  000E74  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2818  000E76  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2819  000E78  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2820  000E7A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2821  000E7C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2822  000E7E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2823  000E80  2A11               	incf	___aodiv@counter^0,f,c
  2824  000E82                     l1262:
  2825  000E82  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2826  000E84  EF46  F007         	goto	u731
  2827  000E88  EF48  F007         	goto	u730
  2828  000E8C                     u731:
  2829  000E8C  EF37  F007         	goto	l1260
  2830  000E90                     u730:
  2831  000E90                     l1264:
  2832  000E90  90D8               	bcf	status,0,c
  2833  000E92  3613               	rlcf	___aodiv@quotient^0,f,c
  2834  000E94  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2835  000E96  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2836  000E98  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2837  000E9A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2838  000E9C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2839  000E9E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2840  000EA0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2841  000EA2  5009               	movf	___aodiv@divisor^0,w,c
  2842  000EA4  5C01               	subwf	___aodiv@dividend^0,w,c
  2843  000EA6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2844  000EA8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2845  000EAA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2846  000EAC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2847  000EAE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2848  000EB0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2849  000EB2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2850  000EB4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2851  000EB6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2852  000EB8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2853  000EBA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2854  000EBC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2855  000EBE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2856  000EC0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2857  000EC2  A0D8               	btfss	status,0,c
  2858  000EC4  EF66  F007         	goto	u741
  2859  000EC8  EF68  F007         	goto	u740
  2860  000ECC                     u741:
  2861  000ECC  EF79  F007         	goto	l1272
  2862  000ED0                     u740:
  2863  000ED0  5009               	movf	___aodiv@divisor^0,w,c
  2864  000ED2  5E01               	subwf	___aodiv@dividend^0,f,c
  2865  000ED4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2866  000ED6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2867  000ED8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2868  000EDA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2869  000EDC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2870  000EDE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2871  000EE0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2872  000EE2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2873  000EE4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2874  000EE6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2875  000EE8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2876  000EEA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2877  000EEC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2878  000EEE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2879  000EF0  8013               	bsf	___aodiv@quotient^0,0,c
  2880  000EF2                     l1272:
  2881  000EF2  90D8               	bcf	status,0,c
  2882  000EF4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2883  000EF6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2884  000EF8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2885  000EFA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2886  000EFC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2887  000EFE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2888  000F00  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2889  000F02  3209               	rrcf	___aodiv@divisor^0,f,c
  2890  000F04  2E11               	decfsz	___aodiv@counter^0,f,c
  2891  000F06  EF48  F007         	goto	l1264
  2892  000F0A                     l1276:
  2893  000F0A  5012               	movf	___aodiv@sign^0,w,c
  2894  000F0C  B4D8               	btfsc	status,2,c
  2895  000F0E  EF8B  F007         	goto	u751
  2896  000F12  EF8D  F007         	goto	u750
  2897  000F16                     u751:
  2898  000F16  EF9D  F007         	goto	l1280
  2899  000F1A                     u750:
  2900  000F1A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2901  000F1C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2902  000F1E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2903  000F20  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2904  000F22  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2905  000F24  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2906  000F26  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2907  000F28  6C13               	negf	___aodiv@quotient^0,c
  2908  000F2A  0E00               	movlw	0
  2909  000F2C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2910  000F2E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2911  000F30  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2912  000F32  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2913  000F34  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2914  000F36  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2915  000F38  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2916  000F3A                     l1280:
  2917  000F3A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2918  000F3E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2919  000F42  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2920  000F46  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2921  000F4A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2922  000F4E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2923  000F52  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2924  000F56  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2925  000F5A  0012               	return		;funcret
  2926  000F5C                     __end_of___aodiv:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _ladrar *****************
  2930 ;; Defined at:
  2931 ;;		line 4 in file "perro.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		None
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2945 ;;      Params:         0       0       0       0       0       0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2948 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2949 ;;Total ram usage:        0 bytes
  2950 ;; Hardware stack levels used: 1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text15
  2959  001674                     __ptext15:
  2960                           	callstack 0
  2961  001674                     _ladrar:
  2962                           	callstack 30
  2963  001674  0012               	return		;funcret
  2964  001676                     __end_of_ladrar:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _comer *****************
  2968 ;; Defined at:
  2969 ;;		line 9 in file "perro.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		None
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text16
  2997  001676                     __ptext16:
  2998                           	callstack 0
  2999  001676                     _comer:
  3000                           	callstack 30
  3001  001676  0012               	return		;funcret
  3002  001678                     __end_of_comer:
  3003                           	callstack 0
  3004                           
  3005                           	psect	rparam
  3006  0000                     
  3007                           	psect	idloc
  3008                           
  3009                           ;Config register IDLOC0 @ 0x200000
  3010                           ;	unspecified, using default values
  3011  200000                     	org	2097152
  3012  200000  FF                 	db	255
  3013                           
  3014                           ;Config register IDLOC1 @ 0x200001
  3015                           ;	unspecified, using default values
  3016  200001                     	org	2097153
  3017  200001  FF                 	db	255
  3018                           
  3019                           ;Config register IDLOC2 @ 0x200002
  3020                           ;	unspecified, using default values
  3021  200002                     	org	2097154
  3022  200002  FF                 	db	255
  3023                           
  3024                           ;Config register IDLOC3 @ 0x200003
  3025                           ;	unspecified, using default values
  3026  200003                     	org	2097155
  3027  200003  FF                 	db	255
  3028                           
  3029                           ;Config register IDLOC4 @ 0x200004
  3030                           ;	unspecified, using default values
  3031  200004                     	org	2097156
  3032  200004  FF                 	db	255
  3033                           
  3034                           ;Config register IDLOC5 @ 0x200005
  3035                           ;	unspecified, using default values
  3036  200005                     	org	2097157
  3037  200005  FF                 	db	255
  3038                           
  3039                           ;Config register IDLOC6 @ 0x200006
  3040                           ;	unspecified, using default values
  3041  200006                     	org	2097158
  3042  200006  FF                 	db	255
  3043                           
  3044                           ;Config register IDLOC7 @ 0x200007
  3045                           ;	unspecified, using default values
  3046  200007                     	org	2097159
  3047  200007  FF                 	db	255
  3048                           
  3049                           	psect	config
  3050                           
  3051                           ;Config register CONFIG1L @ 0x300000
  3052                           ;	unspecified, using default values
  3053                           ;	PLL Prescaler Selection bits
  3054                           ;	PLLDIV = 0x0, unprogrammed default
  3055                           ;	System Clock Postscaler Selection bits
  3056                           ;	CPUDIV = 0x0, unprogrammed default
  3057                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3058                           ;	USBDIV = 0x0, unprogrammed default
  3059  300000                     	org	3145728
  3060  300000  00                 	db	0
  3061                           
  3062                           ;Config register CONFIG1H @ 0x300001
  3063                           ;	unspecified, using default values
  3064                           ;	Oscillator Selection bits
  3065                           ;	FOSC = 0x5, unprogrammed default
  3066                           ;	Fail-Safe Clock Monitor Enable bit
  3067                           ;	FCMEN = 0x0, unprogrammed default
  3068                           ;	Internal/External Oscillator Switchover bit
  3069                           ;	IESO = 0x0, unprogrammed default
  3070  300001                     	org	3145729
  3071  300001  05                 	db	5
  3072                           
  3073                           ;Config register CONFIG2L @ 0x300002
  3074                           ;	unspecified, using default values
  3075                           ;	Power-up Timer Enable bit
  3076                           ;	PWRT = 0x1, unprogrammed default
  3077                           ;	Brown-out Reset Enable bits
  3078                           ;	BOR = 0x3, unprogrammed default
  3079                           ;	Brown-out Reset Voltage bits
  3080                           ;	BORV = 0x3, unprogrammed default
  3081                           ;	USB Voltage Regulator Enable bit
  3082                           ;	VREGEN = 0x0, unprogrammed default
  3083  300002                     	org	3145730
  3084  300002  1F                 	db	31
  3085                           
  3086                           ;Config register CONFIG2H @ 0x300003
  3087                           ;	unspecified, using default values
  3088                           ;	Watchdog Timer Enable bit
  3089                           ;	WDT = 0x1, unprogrammed default
  3090                           ;	Watchdog Timer Postscale Select bits
  3091                           ;	WDTPS = 0xF, unprogrammed default
  3092  300003                     	org	3145731
  3093  300003  1F                 	db	31
  3094                           
  3095                           ; Padding undefined space
  3096  300004                     	org	3145732
  3097  300004  FF                 	db	255
  3098                           
  3099                           ;Config register CONFIG3H @ 0x300005
  3100                           ;	unspecified, using default values
  3101                           ;	CCP2 MUX bit
  3102                           ;	CCP2MX = 0x1, unprogrammed default
  3103                           ;	PORTB A/D Enable bit
  3104                           ;	PBADEN = 0x1, unprogrammed default
  3105                           ;	Low-Power Timer 1 Oscillator Enable bit
  3106                           ;	LPT1OSC = 0x0, unprogrammed default
  3107                           ;	MCLR Pin Enable bit
  3108                           ;	MCLRE = 0x1, unprogrammed default
  3109  300005                     	org	3145733
  3110  300005  83                 	db	131
  3111                           
  3112                           ;Config register CONFIG4L @ 0x300006
  3113                           ;	unspecified, using default values
  3114                           ;	Stack Full/Underflow Reset Enable bit
  3115                           ;	STVREN = 0x1, unprogrammed default
  3116                           ;	Single-Supply ICSP Enable bit
  3117                           ;	LVP = 0x1, unprogrammed default
  3118                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3119                           ;	ICPRT = 0x0, unprogrammed default
  3120                           ;	Extended Instruction Set Enable bit
  3121                           ;	XINST = 0x0, unprogrammed default
  3122                           ;	Background Debugger Enable bit
  3123                           ;	DEBUG = 0x1, unprogrammed default
  3124  300006                     	org	3145734
  3125  300006  85                 	db	133
  3126                           
  3127                           ; Padding undefined space
  3128  300007                     	org	3145735
  3129  300007  FF                 	db	255
  3130                           
  3131                           ;Config register CONFIG5L @ 0x300008
  3132                           ;	unspecified, using default values
  3133                           ;	Code Protection bit
  3134                           ;	CP0 = 0x1, unprogrammed default
  3135                           ;	Code Protection bit
  3136                           ;	CP1 = 0x1, unprogrammed default
  3137                           ;	Code Protection bit
  3138                           ;	CP2 = 0x1, unprogrammed default
  3139                           ;	Code Protection bit
  3140                           ;	CP3 = 0x1, unprogrammed default
  3141  300008                     	org	3145736
  3142  300008  0F                 	db	15
  3143                           
  3144                           ;Config register CONFIG5H @ 0x300009
  3145                           ;	unspecified, using default values
  3146                           ;	Boot Block Code Protection bit
  3147                           ;	CPB = 0x1, unprogrammed default
  3148                           ;	Data EEPROM Code Protection bit
  3149                           ;	CPD = 0x1, unprogrammed default
  3150  300009                     	org	3145737
  3151  300009  C0                 	db	192
  3152                           
  3153                           ;Config register CONFIG6L @ 0x30000A
  3154                           ;	unspecified, using default values
  3155                           ;	Write Protection bit
  3156                           ;	WRT0 = 0x1, unprogrammed default
  3157                           ;	Write Protection bit
  3158                           ;	WRT1 = 0x1, unprogrammed default
  3159                           ;	Write Protection bit
  3160                           ;	WRT2 = 0x1, unprogrammed default
  3161                           ;	Write Protection bit
  3162                           ;	WRT3 = 0x1, unprogrammed default
  3163  30000A                     	org	3145738
  3164  30000A  0F                 	db	15
  3165                           
  3166                           ;Config register CONFIG6H @ 0x30000B
  3167                           ;	unspecified, using default values
  3168                           ;	Configuration Register Write Protection bit
  3169                           ;	WRTC = 0x1, unprogrammed default
  3170                           ;	Boot Block Write Protection bit
  3171                           ;	WRTB = 0x1, unprogrammed default
  3172                           ;	Data EEPROM Write Protection bit
  3173                           ;	WRTD = 0x1, unprogrammed default
  3174  30000B                     	org	3145739
  3175  30000B  E0                 	db	224
  3176                           
  3177                           ;Config register CONFIG7L @ 0x30000C
  3178                           ;	unspecified, using default values
  3179                           ;	Table Read Protection bit
  3180                           ;	EBTR0 = 0x1, unprogrammed default
  3181                           ;	Table Read Protection bit
  3182                           ;	EBTR1 = 0x1, unprogrammed default
  3183                           ;	Table Read Protection bit
  3184                           ;	EBTR2 = 0x1, unprogrammed default
  3185                           ;	Table Read Protection bit
  3186                           ;	EBTR3 = 0x1, unprogrammed default
  3187  30000C                     	org	3145740
  3188  30000C  0F                 	db	15
  3189                           
  3190                           ;Config register CONFIG7H @ 0x30000D
  3191                           ;	unspecified, using default values
  3192                           ;	Boot Block Table Read Protection bit
  3193                           ;	EBTRB = 0x1, unprogrammed default
  3194  30000D                     	org	3145741
  3195  30000D  40                 	db	64
  3196                           tosu	equ	0xFFF
  3197                           tosh	equ	0xFFE
  3198                           tosl	equ	0xFFD
  3199                           stkptr	equ	0xFFC
  3200                           pclatu	equ	0xFFB
  3201                           pclath	equ	0xFFA
  3202                           pcl	equ	0xFF9
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodh	equ	0xFF4
  3208                           prodl	equ	0xFF3
  3209                           indf0	equ	0xFEF
  3210                           postinc0	equ	0xFEE
  3211                           postdec0	equ	0xFED
  3212                           preinc0	equ	0xFEC
  3213                           plusw0	equ	0xFEB
  3214                           fsr0h	equ	0xFEA
  3215                           fsr0l	equ	0xFE9
  3216                           wreg	equ	0xFE8
  3217                           indf1	equ	0xFE7
  3218                           postinc1	equ	0xFE6
  3219                           postdec1	equ	0xFE5
  3220                           preinc1	equ	0xFE4
  3221                           plusw1	equ	0xFE3
  3222                           fsr1h	equ	0xFE2
  3223                           fsr1l	equ	0xFE1
  3224                           bsr	equ	0xFE0
  3225                           indf2	equ	0xFDF
  3226                           postinc2	equ	0xFDE
  3227                           postdec2	equ	0xFDD
  3228                           preinc2	equ	0xFDC
  3229                           plusw2	equ	0xFDB
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8

Data Sizes:
    Strings     82
    Constant    0
    Data        21
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     16      77
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[26]), STR_2(CODE[28]), STR_1(CODE[24]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[26]), STR_2(CODE[28]), STR_1(CODE[24]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_printf(COMRAM[2]), main@perro(BANK0[14]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_printf(COMRAM[2]), main@perro(BANK0[14]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S502$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S502$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[26]), STR_2(CODE[28]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[26]), STR_2(CODE[28]), STR_1(CODE[24]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@perro(BANK0[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@perro(BANK0[14]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), main@perro(BANK0[14]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[26]), STR_2(CODE[28]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   10415
                                              2 BANK0     14    14      0
                              _comer
                             _ladrar
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   10345
                                             91 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10061
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    37      6    9702
                                             63 COMRAM    20    14      6
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2073
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5214
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3565
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1625
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1224
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _ladrar                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _comer                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comer
   _ladrar
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _stoa
           _fputc
           _strlen
         _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBIGSFR           A0      0       0      21        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      4D       5       48.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC       6        0.0%
DATA                 0      0      AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 08 13:16:25 2023

                     l13 1538                       l22 1676                       l14 1538  
                     l19 1674                      l145 0F5A                      l158 1244  
                    l820 15C2                      l812 14D8                      l741 13AC  
                    l813 14E0                      l709 165A                      l743 13E8  
                    l751 08FC                      l832 147E                      l840 1582  
                    l817 15BA                      l738 136A                      l843 1672  
                    l749 08F4                      l853 1322                      l792 10E0  
                    l776 0FDC                      l849 1632                      l769 0B34  
                    l778 0FE4                      l787 108E                      l788 10D8  
                    l799 0DD2                      u700 0E18                      u701 0E14  
                    u630 13FC                      u711 0E42                      u631 13F8  
                    u720 0E66                      u800 11BC                      u640 140E  
                    u721 0E62                      u801 11B8                      u641 140A  
                    u730 0E90                      u810 1204                      u650 1436  
                    u731 0E8C                      u811 1200                      u651 1432  
                    u740 0ED0                      u660 146C                      u820 1334  
                    u900 08CC                      u741 0ECC                      u661 1468  
                    u821 1330                      u901 08C8                      u750 0F1A  
                    u670 1582                      u830 1356                      u910 08E8  
                    u751 0F16                      u671 157E                      u831 1352  
                    u911 08E4                      u760 10F4                      u680 1626  
                    u840 13AC                      u920 0916                      u761 10F0  
                    u681 1622                      u841 13A8                      u921 0912  
                    u690 0DE6                      u770 1126                      u850 13BC  
                    u930 0924                      u691 0DE2                      u771 1122  
                    u851 13B8                      u931 0920                      u780 1164  
                    u860 159E                      u940 0A4C                      u781 1160  
                    u861 159A                      u941 0A48                      u790 118E  
                    u950 0A6A                      u870 0884                      u791 118A  
                    u951 0A66                      u871 087E                      u960 0A84  
                    u880 0886                      u961 0A80                      u970 0A9E  
                    u890 089C                      u971 0A9A                      u891 0898  
                    u980 0AAE                      u981 0AAA                      u990 0AC0  
                    u991 0ABC                      _abs 1584                      _pad 1324  
                    wreg 000FE8                     l1210 13FC                     ?_abs 0013  
                   l1300 116C                     l1212 140E                     l1310 11EE  
                   l1302 1180                     l1214 1418                     l1222 1540  
                   l1230 15FE                     l1240 0DD4                     l1304 118E  
                   l1312 11F4                     l1216 1436                     l1208 13EA  
                   l1224 154C                     l1232 160A                     l1320 1324  
                   l1400 0AF4                     l1250 0E18                     l1242 0DD8  
                   l1314 1204                     l1306 11BC                     l1218 146C  
                   l1226 155E                     l1234 160E                     l1330 1376  
                   l1322 1334                     l1402 0AFC                     l1410 0F6E  
                   l1260 0E6E                     l1252 0E38                     l1244 0DE6  
                   l1316 1224                     l1308 11DC                     l1228 1562  
                   l1236 1626                     l1332 138A                     l1324 1348  
                   l1404 0B0C                     l1420 0FAC                     l1412 0F76  
                   l1500 0CE8                     l1270 0EF0                     l1262 0E82  
                   l1254 0E3C                     l1246 0E06                     l1342 1584  
                   l1334 138E                     l1326 1356                     l1350 089C  
                   l1430 1020                     l1422 0FBA                     l1414 0F88  
                   l1510 0D62                     l1502 0D10                     l1280 0F3A  
                   l1272 0EF2                     l1264 0E90                     l1256 0E48  
                   l1248 0E0A                     l1344 159E                     l1336 13BC  
                   l1328 1362                     l1360 0904                     l1352 08BC  
                   l1440 1070                     l1432 103E                     l1416 0F90  
                   l1408 0F5C                     l1512 0D76                     l1274 0F04  
                   l1266 0EA2                     l1258 0E66                     l1290 1114  
                   l1338 13D0                     l1370 093A                     l1362 0916  
                   l1354 08CC                     l1346 0854                     l1434 104A  
                   l1426 1008                     l1418 0FA4                     l1450 1246  
                   l1506 0D30                     l1522 0D9C                     l1530 1480  
                   l1268 0ED0                     l1276 0F0A                     l1292 1118  
                   l1284 10E2                     l1372 0940                     l1380 0A32  
                   l1364 0924                     l1356 08CE                     l1348 0874  
                   l1444 10A2                     l1436 1068                     l1428 101C  
                   l1460 12A6                     l1452 1270                     l1524 0DC0  
                   l1508 0D54                     l1516 0D82                     l1532 1488  
                   l1540 163E                     l1278 0F1A                     l1294 1126  
                   l1286 10E6                     l1382 0A4C                     l1390 0AAE  
                   l1374 09C2                     l1366 092A                     l1358 08E8  
                   l1446 10B6                     l1438 106C                     l1462 12C2  
                   l1518 0D90                     l1470 0B36                     l1534 1496  
                   l1550 14FC                     l1296 1146                     l1288 10F4  
                   l1392 0AC0                     l1384 0A6A                     l1376 09C8  
                   l1368 0932                     l1448 10BA                     l1464 12D4  
                   l1456 127C                     l1480 0BA2                     l1472 0B5A  
                   l1536 14BC                     l1552 1510                     l1544 14E2  
                   l1298 1164                     l1394 0AD0                     l1386 0A84  
                   l1378 09CE                     l1466 12FE                     l1458 128A  
                   l1490 0C6A                     l1482 0BC6                     l1474 0B68  
                   l1538 1634                     l1554 1524                     l1546 14F4  
                   l1396 0AD6                     l1388 0A9E                     l1492 0CA0  
                   l1484 0C0E                     l1476 0B7A                     l1548 14F8  
                   l1398 0AE8                     l1494 0CC4                     l1478 0B7E  
                   l1496 0CD0                     l1488 0C46                     l1498 0CD8  
                   ?_pad 0011                     STR_1 0837                     STR_2 0801  
                   STR_3 081D                     STR_4 084F                     STR_6 084F  
                   u1000 0AD0                     u1001 0ACC                     u1010 0AE8  
                   u1011 0AE4                     u1100 10D8                     u1101 10D4  
                   u1021 0F66                     u1030 0F88                     u1110 1270  
                   u1031 0F84                     u1111 126C                     u1040 0FBA  
                   u1120 12A6                     u1200 0CA0                     u1041 0FB6  
                   u1121 12A2                     u1201 0C9C                     u1050 0FD8  
                   u1130 12C2                     u1210 0CC4                     u1051 0FD4  
                   u1131 12BE                     u1211 0CC0                     u1060 1004  
                   u1140 12D4                     u1220 0D54                     u1061 1000  
                   u1141 12D0                     u1221 0D50                     u1070 103E  
                   u1150 12FE                     u1230 14D8                     u1071 103A  
                   u1151 12FA                     u1231 14D4                     u1080 108E  
                   u1160 0B5A                     u1081 108A                     u1161 0B56  
                   u1241 14EC                     u1090 109E                     u1170 0BA2  
                   u1091 109A                     u1171 0B9E                     u1180 0BC6  
                   u1181 0BC2                     u1190 0C6A                     u1191 0C66  
                   abs@a 0013                     _dbuf 0068                     _main 14E2  
                   _dtoa 0854                     _prec 0064                     _nout 0060  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9                     _stoa 0F5C  
                   start 0000             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0017          __end_of___aodiv 0F5C                    ?_main 0001  
                  ?_dtoa 001C          __end_of___aomod 1246                    ?_stoa 000A  
           vfpfcnvrt@fmt 0042                    _flags 0066                    _comer 1676  
                  _fputc 13EA                    _fputs 1540                    pad@fp 0011  
                  _width 0062                    _putch 1672                    dtoa@d 001E  
                  dtoa@i 003E                    dtoa@n 0036                    dtoa@p 0030  
                  dtoa@s 0034                    dtoa@w 0032                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    stoa@i 0016  
                  stoa@l 001E                    stoa@p 001C                    stoa@s 000C  
                  stoa@w 0018                    status 000FD8          __end_of_strncmp 1324  
        __initialization 15C4             __end_of_main 1540             __end_of_dtoa 0B36  
           __end_of_stoa 10E2                   ??_main 0060                   ??_dtoa 0026  
                 ??_stoa 000E            __activetblptr 000001                   ?_comer 0001  
                 ?_fputc 0001                   ?_fputs 000A                   ?_putch 0001  
           vfprintf@cfmt 005A                ??___aodiv 0011                ??___aomod 0011  
                 _ladrar 1674                   clear_0 15EA                   isa$std 000001  
                 _printf 1634                   pad@buf 0013                   dtoa@fp 001C  
                 _strlen 15FE                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 stoa@cp 001A                   stoa@fp 000A                   putch@c 0001  
       __end_of_vfprintf 14E2                ??_strncmp 0007               __accesstop 0060  
__end_of__initialization 15F0            ___rparam_used 000001           __pcstackCOMRAM 0001  
           __pidataBANK0 165C            __end_of_comer 1678            __end_of_fputc 1480  
          __end_of_fputs 1584            __end_of_putch 1674                  ??_comer 0001  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 0060                  ?_ladrar 0001                  ?_printf 005C  
                ?_strlen 0001                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 0DD4                  ___aomod 10E2                ?_vfprintf 0054  
           __psmallconst 0800                  __pcinit 15C4                  __ramtop 0800  
                __ptext0 14E2                  __ptext1 1634                  __ptext2 1480  
                __ptext3 0B36                  __ptext4 1246                  __ptext5 0F5C  
                __ptext6 0854                  __ptext7 1324                  __ptext8 15FE  
                __ptext9 1540                  _strncmp 1246     end_of_initialization 15F0  
                fputc@fp 0003                  fputs@fp 000C        __end_of_vfpfcnvrt 0DD4  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 005A  
                strlen@a 0003                  strlen@s 0001              vfpfcnvrt@ap 0044  
            vfpfcnvrt@cp 0050              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_ladrar 1676           __end_of_printf 165C           __end_of_strlen 1634  
    start_initialization 15C4              __end_of_abs 15C4              __end_of_pad 13EA  
            vfprintf@fmt 0056                 ??_ladrar 0001              __pdataBANK0 0088  
               ??_printf 0060                 ??_strlen 0003            __pcstackBANK0 009D  
       ___aodiv@dividend 0001                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013              __smallconst 0800                 ?_strncmp 0001  
              main@F3527 0088                _vfpfcnvrt 0B36                main@perro 009F  
              copy_data0 15D8                 __Hrparam 0000               vfprintf@ap 0058  
               __Lrparam 0000               vfprintf@fp 0054             __Lsmallconst 0800  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
               _dtoa$578 002E                 __ptext10 13EA                 __ptext11 1672  
               __ptext12 1584                 __ptext13 10E2                 __ptext14 0DD4  
               __ptext15 1674                 __ptext16 1676                stoa@F1150 0096  
               isa$xinst 000000                 _vfprintf 1480                printf@fmt 005C  
       ___aomod@dividend 0001                strncmp@_l 0001                strncmp@_r 0003  
               printf@ap 009D          ___aomod@divisor 0009              ??_vfpfcnvrt 0046  
               stoa@nuls 000F            _vfpfcnvrt$607 0052          ___aomod@counter 0011  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
           ___aodiv@sign 0012             ___aomod@sign 0012  
